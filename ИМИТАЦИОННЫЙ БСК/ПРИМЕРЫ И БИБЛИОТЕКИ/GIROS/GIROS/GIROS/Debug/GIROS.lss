
GIROS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000162  00800100  00800100  00001256  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00001256  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000001b8  00000000  00000000  00001286  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001c7e  00000000  00000000  0000143e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000412  00000000  00000000  000030bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000ea9  00000000  00000000  000034ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000428  00000000  00000000  00004378  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000523  00000000  00000000  000047a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000632  00000000  00000000  00004cc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000198  00000000  00000000  000052f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5c c0       	rjmp	.+184    	; 0xba <__ctors_end>
       2:	00 00       	nop
       4:	6b c0       	rjmp	.+214    	; 0xdc <__bad_interrupt>
       6:	00 00       	nop
       8:	69 c0       	rjmp	.+210    	; 0xdc <__bad_interrupt>
       a:	00 00       	nop
       c:	67 c0       	rjmp	.+206    	; 0xdc <__bad_interrupt>
       e:	00 00       	nop
      10:	65 c0       	rjmp	.+202    	; 0xdc <__bad_interrupt>
      12:	00 00       	nop
      14:	63 c0       	rjmp	.+198    	; 0xdc <__bad_interrupt>
      16:	00 00       	nop
      18:	61 c0       	rjmp	.+194    	; 0xdc <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5f c0       	rjmp	.+190    	; 0xdc <__bad_interrupt>
      1e:	00 00       	nop
      20:	5d c0       	rjmp	.+186    	; 0xdc <__bad_interrupt>
      22:	00 00       	nop
      24:	0e c3       	rjmp	.+1564   	; 0x642 <__vector_9>
      26:	00 00       	nop
      28:	59 c0       	rjmp	.+178    	; 0xdc <__bad_interrupt>
      2a:	00 00       	nop
      2c:	57 c0       	rjmp	.+174    	; 0xdc <__bad_interrupt>
      2e:	00 00       	nop
      30:	ee c2       	rjmp	.+1500   	; 0x60e <__vector_12>
      32:	00 00       	nop
      34:	53 c0       	rjmp	.+166    	; 0xdc <__bad_interrupt>
      36:	00 00       	nop
      38:	51 c0       	rjmp	.+162    	; 0xdc <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c7 c2       	rjmp	.+1422   	; 0x5cc <__vector_15>
      3e:	00 00       	nop
      40:	4d c0       	rjmp	.+154    	; 0xdc <__bad_interrupt>
      42:	00 00       	nop
      44:	4b c0       	rjmp	.+150    	; 0xdc <__bad_interrupt>
      46:	00 00       	nop
      48:	49 c0       	rjmp	.+146    	; 0xdc <__bad_interrupt>
      4a:	00 00       	nop
      4c:	47 c0       	rjmp	.+142    	; 0xdc <__bad_interrupt>
      4e:	00 00       	nop
      50:	45 c0       	rjmp	.+138    	; 0xdc <__bad_interrupt>
      52:	00 00       	nop
      54:	43 c0       	rjmp	.+134    	; 0xdc <__bad_interrupt>
      56:	00 00       	nop
      58:	41 c0       	rjmp	.+130    	; 0xdc <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3f c0       	rjmp	.+126    	; 0xdc <__bad_interrupt>
      5e:	00 00       	nop
      60:	3d c0       	rjmp	.+122    	; 0xdc <__bad_interrupt>
      62:	00 00       	nop
      64:	3b c0       	rjmp	.+118    	; 0xdc <__bad_interrupt>
      66:	00 00       	nop
      68:	39 c0       	rjmp	.+114    	; 0xdc <__bad_interrupt>
      6a:	00 00       	nop
      6c:	37 c0       	rjmp	.+110    	; 0xdc <__bad_interrupt>
      6e:	00 00       	nop
      70:	35 c0       	rjmp	.+106    	; 0xdc <__bad_interrupt>
      72:	00 00       	nop
      74:	33 c0       	rjmp	.+102    	; 0xdc <__bad_interrupt>
      76:	00 00       	nop
      78:	43 c3       	rjmp	.+1670   	; 0x700 <__vector_30>
      7a:	00 00       	nop
      7c:	2f c0       	rjmp	.+94     	; 0xdc <__bad_interrupt>
      7e:	00 00       	nop
      80:	2d c0       	rjmp	.+90     	; 0xdc <__bad_interrupt>
      82:	00 00       	nop
      84:	2b c0       	rjmp	.+86     	; 0xdc <__bad_interrupt>
      86:	00 00       	nop
      88:	29 c0       	rjmp	.+82     	; 0xdc <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 00       	.word	0x003f	; ????

000000ba <__ctors_end>:
      ba:	11 24       	eor	r1, r1
      bc:	1f be       	out	0x3f, r1	; 63
      be:	cf ef       	ldi	r28, 0xFF	; 255
      c0:	d0 e1       	ldi	r29, 0x10	; 16
      c2:	de bf       	out	0x3e, r29	; 62
      c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_clear_bss>:
      c6:	22 e0       	ldi	r18, 0x02	; 2
      c8:	a0 e0       	ldi	r26, 0x00	; 0
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <.do_clear_bss_start>

000000ce <.do_clear_bss_loop>:
      ce:	1d 92       	st	X+, r1

000000d0 <.do_clear_bss_start>:
      d0:	a2 36       	cpi	r26, 0x62	; 98
      d2:	b2 07       	cpc	r27, r18
      d4:	e1 f7       	brne	.-8      	; 0xce <.do_clear_bss_loop>
      d6:	52 d4       	rcall	.+2212   	; 0x97c <main>
      d8:	0c 94 ef 08 	jmp	0x11de	; 0x11de <_exit>

000000dc <__bad_interrupt>:
      dc:	91 cf       	rjmp	.-222    	; 0x0 <__vectors>

000000de <UART1_Transmit>:
//{РІС‹С…РѕРґРЅРѕРµ С‡РёСЃР»Рѕ РІ <FFFF>}
//


void hex (unsigned int i )
{
      de:	eb e9       	ldi	r30, 0x9B	; 155
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	90 81       	ld	r25, Z
      e4:	95 ff       	sbrs	r25, 5
      e6:	fd cf       	rjmp	.-6      	; 0xe2 <UART1_Transmit+0x4>
      e8:	80 93 9c 00 	sts	0x009C, r24
      ec:	08 95       	ret

000000ee <UART1_Receive>:
      ee:	eb e9       	ldi	r30, 0x9B	; 155
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	80 81       	ld	r24, Z
      f4:	88 23       	and	r24, r24
      f6:	ec f7       	brge	.-6      	; 0xf2 <UART1_Receive+0x4>
      f8:	80 91 9c 00 	lds	r24, 0x009C
      fc:	08 95       	ret

000000fe <RR>:
      fe:	8a 30       	cpi	r24, 0x0A	; 10
     100:	40 f4       	brcc	.+16     	; 0x112 <RR+0x14>
     102:	90 e3       	ldi	r25, 0x30	; 48
     104:	98 0f       	add	r25, r24
     106:	02 c0       	rjmp	.+4      	; 0x10c <RR+0xe>
     108:	97 e3       	ldi	r25, 0x37	; 55
     10a:	98 0f       	add	r25, r24
     10c:	89 2f       	mov	r24, r25
     10e:	e7 cf       	rjmp	.-50     	; 0xde <UART1_Transmit>
     110:	08 95       	ret
     112:	80 31       	cpi	r24, 0x10	; 16
     114:	c8 f3       	brcs	.-14     	; 0x108 <RR+0xa>
     116:	fa cf       	rjmp	.-12     	; 0x10c <RR+0xe>

00000118 <ascii_8>:
     118:	cf 93       	push	r28
     11a:	c8 2f       	mov	r28, r24
     11c:	82 95       	swap	r24
     11e:	8f 70       	andi	r24, 0x0F	; 15
     120:	ee df       	rcall	.-36     	; 0xfe <RR>
     122:	8c 2f       	mov	r24, r28
     124:	8f 70       	andi	r24, 0x0F	; 15
     126:	eb df       	rcall	.-42     	; 0xfe <RR>
     128:	cf 91       	pop	r28
     12a:	08 95       	ret

0000012c <read_mass>:

// РЅР°РїРёСЃР°С‚СЊ С„СѓРЅРєС†РёСЋ

void read_mass ( unsigned char S) //С‡С‚РµРЅРёРµ СЃРёРјРІРѕР»РѕРІ РІ РјР°СЃСЃРёРІ РїРѕ РїСЂРѕС‚РѕРєРѕР»Сѓ Р“Р¤
{
	glavmas [Rec] = S; //С‡РёС‚Р°РµРј РґР°РЅРЅС‹Рµ
     12c:	90 91 00 01 	lds	r25, 0x0100
     130:	e9 2f       	mov	r30, r25
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	ea 5f       	subi	r30, 0xFA	; 250
     136:	fe 4f       	sbci	r31, 0xFE	; 254
     138:	80 83       	st	Z, r24
	//	UART_TX(glavmas[Rec]);
	
	if (glavmas[Rec] == CR)
     13a:	8d 30       	cpi	r24, 0x0D	; 13
     13c:	49 f4       	brne	.+18     	; 0x150 <read_mass+0x24>
	{
		Priem = 1;
     13e:	81 e0       	ldi	r24, 0x01	; 1
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	90 93 06 02 	sts	0x0206, r25
     146:	80 93 05 02 	sts	0x0205, r24
		
		Rec = 0;
     14a:	10 92 00 01 	sts	0x0100, r1
     14e:	08 95       	ret
	}
	else  { Rec++ ;}
     150:	9f 5f       	subi	r25, 0xFF	; 255
     152:	90 93 00 01 	sts	0x0100, r25
     156:	08 95       	ret

00000158 <i2c_stop_cond>:
	}
}


void CommandW(void) // Функция проверки второго сивола команды - чтения записи данных
{
     158:	88 9a       	sbi	0x11, 0	; 17
     15a:	85 e1       	ldi	r24, 0x15	; 21
     15c:	8a 95       	dec	r24
     15e:	f1 f7       	brne	.-4      	; 0x15c <i2c_stop_cond+0x4>
     160:	00 00       	nop
     162:	89 9a       	sbi	0x11, 1	; 17
     164:	85 e1       	ldi	r24, 0x15	; 21
     166:	8a 95       	dec	r24
     168:	f1 f7       	brne	.-4      	; 0x166 <i2c_stop_cond+0xe>
     16a:	00 00       	nop
     16c:	88 98       	cbi	0x11, 0	; 17
     16e:	85 e1       	ldi	r24, 0x15	; 21
     170:	8a 95       	dec	r24
     172:	f1 f7       	brne	.-4      	; 0x170 <i2c_stop_cond+0x18>
     174:	00 00       	nop
     176:	89 98       	cbi	0x11, 1	; 17
     178:	85 e1       	ldi	r24, 0x15	; 21
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <i2c_stop_cond+0x22>
     17e:	00 00       	nop
     180:	10 92 05 01 	sts	0x0105, r1
     184:	81 99       	sbic	0x10, 1	; 16
     186:	05 c0       	rjmp	.+10     	; 0x192 <i2c_stop_cond+0x3a>
     188:	80 91 05 01 	lds	r24, 0x0105
     18c:	8f 5f       	subi	r24, 0xFF	; 255
     18e:	80 93 05 01 	sts	0x0105, r24
     192:	80 99       	sbic	0x10, 0	; 16
     194:	05 c0       	rjmp	.+10     	; 0x1a0 <i2c_stop_cond+0x48>
     196:	80 91 05 01 	lds	r24, 0x0105
     19a:	8f 5f       	subi	r24, 0xFF	; 255
     19c:	80 93 05 01 	sts	0x0105, r24
     1a0:	85 e1       	ldi	r24, 0x15	; 21
     1a2:	8a 95       	dec	r24
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <i2c_stop_cond+0x4a>
     1a6:	00 00       	nop
     1a8:	85 e1       	ldi	r24, 0x15	; 21
     1aa:	8a 95       	dec	r24
     1ac:	f1 f7       	brne	.-4      	; 0x1aa <i2c_stop_cond+0x52>
     1ae:	00 00       	nop
     1b0:	85 e1       	ldi	r24, 0x15	; 21
     1b2:	8a 95       	dec	r24
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <i2c_stop_cond+0x5a>
     1b6:	00 00       	nop
     1b8:	85 e1       	ldi	r24, 0x15	; 21
     1ba:	8a 95       	dec	r24
     1bc:	f1 f7       	brne	.-4      	; 0x1ba <i2c_stop_cond+0x62>
     1be:	00 00       	nop
     1c0:	08 95       	ret

000001c2 <i2c_init>:
     1c2:	89 98       	cbi	0x11, 1	; 17
     1c4:	88 98       	cbi	0x11, 0	; 17
     1c6:	91 98       	cbi	0x12, 1	; 18
     1c8:	90 98       	cbi	0x12, 0	; 18
     1ca:	c6 df       	rcall	.-116    	; 0x158 <i2c_stop_cond>
     1cc:	c5 cf       	rjmp	.-118    	; 0x158 <i2c_stop_cond>
     1ce:	08 95       	ret

000001d0 <i2c_start_cond>:
     1d0:	89 9a       	sbi	0x11, 1	; 17
     1d2:	85 e1       	ldi	r24, 0x15	; 21
     1d4:	8a 95       	dec	r24
     1d6:	f1 f7       	brne	.-4      	; 0x1d4 <i2c_start_cond+0x4>
     1d8:	00 00       	nop
     1da:	88 9a       	sbi	0x11, 0	; 17
     1dc:	85 e1       	ldi	r24, 0x15	; 21
     1de:	8a 95       	dec	r24
     1e0:	f1 f7       	brne	.-4      	; 0x1de <i2c_start_cond+0xe>
     1e2:	00 00       	nop
     1e4:	08 95       	ret

000001e6 <i2c_send_byte>:
     1e6:	98 e0       	ldi	r25, 0x08	; 8
     1e8:	88 23       	and	r24, r24
     1ea:	14 f0       	brlt	.+4      	; 0x1f0 <i2c_send_byte+0xa>
     1ec:	89 9a       	sbi	0x11, 1	; 17
     1ee:	01 c0       	rjmp	.+2      	; 0x1f2 <i2c_send_byte+0xc>
     1f0:	89 98       	cbi	0x11, 1	; 17
     1f2:	25 e1       	ldi	r18, 0x15	; 21
     1f4:	2a 95       	dec	r18
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <i2c_send_byte+0xe>
     1f8:	00 00       	nop
     1fa:	88 98       	cbi	0x11, 0	; 17
     1fc:	25 e1       	ldi	r18, 0x15	; 21
     1fe:	2a 95       	dec	r18
     200:	f1 f7       	brne	.-4      	; 0x1fe <i2c_send_byte+0x18>
     202:	00 00       	nop
     204:	88 9a       	sbi	0x11, 0	; 17
     206:	88 0f       	add	r24, r24
     208:	91 50       	subi	r25, 0x01	; 1
     20a:	71 f7       	brne	.-36     	; 0x1e8 <i2c_send_byte+0x2>
     20c:	89 98       	cbi	0x11, 1	; 17
     20e:	85 e1       	ldi	r24, 0x15	; 21
     210:	8a 95       	dec	r24
     212:	f1 f7       	brne	.-4      	; 0x210 <i2c_send_byte+0x2a>
     214:	00 00       	nop
     216:	88 98       	cbi	0x11, 0	; 17
     218:	25 e1       	ldi	r18, 0x15	; 21
     21a:	2a 95       	dec	r18
     21c:	f1 f7       	brne	.-4      	; 0x21a <i2c_send_byte+0x34>
     21e:	00 00       	nop
     220:	80 b3       	in	r24, 0x10	; 16
     222:	88 9a       	sbi	0x11, 0	; 17
     224:	86 95       	lsr	r24
     226:	81 70       	andi	r24, 0x01	; 1
     228:	08 95       	ret

0000022a <i2c_get_byte>:
     22a:	28 2f       	mov	r18, r24
     22c:	89 98       	cbi	0x11, 1	; 17
     22e:	98 e0       	ldi	r25, 0x08	; 8
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	88 0f       	add	r24, r24
     234:	88 98       	cbi	0x11, 0	; 17
     236:	35 e1       	ldi	r19, 0x15	; 21
     238:	3a 95       	dec	r19
     23a:	f1 f7       	brne	.-4      	; 0x238 <i2c_get_byte+0xe>
     23c:	00 00       	nop
     23e:	81 99       	sbic	0x10, 1	; 16
     240:	81 60       	ori	r24, 0x01	; 1
     242:	88 9a       	sbi	0x11, 0	; 17
     244:	35 e1       	ldi	r19, 0x15	; 21
     246:	3a 95       	dec	r19
     248:	f1 f7       	brne	.-4      	; 0x246 <i2c_get_byte+0x1c>
     24a:	00 00       	nop
     24c:	91 50       	subi	r25, 0x01	; 1
     24e:	89 f7       	brne	.-30     	; 0x232 <i2c_get_byte+0x8>
     250:	21 11       	cpse	r18, r1
     252:	02 c0       	rjmp	.+4      	; 0x258 <i2c_get_byte+0x2e>
     254:	89 9a       	sbi	0x11, 1	; 17
     256:	01 c0       	rjmp	.+2      	; 0x25a <i2c_get_byte+0x30>
     258:	89 98       	cbi	0x11, 1	; 17
     25a:	95 e1       	ldi	r25, 0x15	; 21
     25c:	9a 95       	dec	r25
     25e:	f1 f7       	brne	.-4      	; 0x25c <i2c_get_byte+0x32>
     260:	00 00       	nop
     262:	88 98       	cbi	0x11, 0	; 17
     264:	35 e1       	ldi	r19, 0x15	; 21
     266:	3a 95       	dec	r19
     268:	f1 f7       	brne	.-4      	; 0x266 <i2c_get_byte+0x3c>
     26a:	00 00       	nop
     26c:	88 9a       	sbi	0x11, 0	; 17
     26e:	95 e1       	ldi	r25, 0x15	; 21
     270:	9a 95       	dec	r25
     272:	f1 f7       	brne	.-4      	; 0x270 <i2c_get_byte+0x46>
     274:	00 00       	nop
     276:	89 98       	cbi	0x11, 1	; 17
     278:	08 95       	ret

0000027a <I2C_write>:
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	d8 2f       	mov	r29, r24
     280:	c6 2f       	mov	r28, r22
     282:	a6 df       	rcall	.-180    	; 0x1d0 <i2c_start_cond>
     284:	80 ed       	ldi	r24, 0xD0	; 208
     286:	af df       	rcall	.-162    	; 0x1e6 <i2c_send_byte>
     288:	8d 2f       	mov	r24, r29
     28a:	ad df       	rcall	.-166    	; 0x1e6 <i2c_send_byte>
     28c:	8c 2f       	mov	r24, r28
     28e:	ab df       	rcall	.-170    	; 0x1e6 <i2c_send_byte>
     290:	63 df       	rcall	.-314    	; 0x158 <i2c_stop_cond>
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	08 95       	ret

00000298 <Init_6050>:
     298:	67 e0       	ldi	r22, 0x07	; 7
     29a:	89 e1       	ldi	r24, 0x19	; 25
     29c:	ee df       	rcall	.-36     	; 0x27a <I2C_write>
     29e:	60 e0       	ldi	r22, 0x00	; 0
     2a0:	8a e1       	ldi	r24, 0x1A	; 26
     2a2:	eb df       	rcall	.-42     	; 0x27a <I2C_write>
     2a4:	68 e1       	ldi	r22, 0x18	; 24
     2a6:	8b e1       	ldi	r24, 0x1B	; 27
     2a8:	e8 df       	rcall	.-48     	; 0x27a <I2C_write>
     2aa:	60 e0       	ldi	r22, 0x00	; 0
     2ac:	8c e1       	ldi	r24, 0x1C	; 28
     2ae:	e5 df       	rcall	.-54     	; 0x27a <I2C_write>
     2b0:	60 e0       	ldi	r22, 0x00	; 0
     2b2:	8d e1       	ldi	r24, 0x1D	; 29
     2b4:	e2 df       	rcall	.-60     	; 0x27a <I2C_write>
     2b6:	60 e0       	ldi	r22, 0x00	; 0
     2b8:	8e e1       	ldi	r24, 0x1E	; 30
     2ba:	df df       	rcall	.-66     	; 0x27a <I2C_write>
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	8f e1       	ldi	r24, 0x1F	; 31
     2c0:	dc df       	rcall	.-72     	; 0x27a <I2C_write>
     2c2:	60 e0       	ldi	r22, 0x00	; 0
     2c4:	80 e2       	ldi	r24, 0x20	; 32
     2c6:	d9 df       	rcall	.-78     	; 0x27a <I2C_write>
     2c8:	60 e0       	ldi	r22, 0x00	; 0
     2ca:	81 e2       	ldi	r24, 0x21	; 33
     2cc:	d6 df       	rcall	.-84     	; 0x27a <I2C_write>
     2ce:	60 e0       	ldi	r22, 0x00	; 0
     2d0:	82 e2       	ldi	r24, 0x22	; 34
     2d2:	d3 df       	rcall	.-90     	; 0x27a <I2C_write>
     2d4:	60 e0       	ldi	r22, 0x00	; 0
     2d6:	83 e2       	ldi	r24, 0x23	; 35
     2d8:	d0 df       	rcall	.-96     	; 0x27a <I2C_write>
     2da:	60 e0       	ldi	r22, 0x00	; 0
     2dc:	84 e2       	ldi	r24, 0x24	; 36
     2de:	cd df       	rcall	.-102    	; 0x27a <I2C_write>
     2e0:	60 e0       	ldi	r22, 0x00	; 0
     2e2:	85 e2       	ldi	r24, 0x25	; 37
     2e4:	ca df       	rcall	.-108    	; 0x27a <I2C_write>
     2e6:	60 e0       	ldi	r22, 0x00	; 0
     2e8:	86 e2       	ldi	r24, 0x26	; 38
     2ea:	c7 df       	rcall	.-114    	; 0x27a <I2C_write>
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	87 e2       	ldi	r24, 0x27	; 39
     2f0:	c4 df       	rcall	.-120    	; 0x27a <I2C_write>
     2f2:	60 e0       	ldi	r22, 0x00	; 0
     2f4:	88 e2       	ldi	r24, 0x28	; 40
     2f6:	c1 df       	rcall	.-126    	; 0x27a <I2C_write>
     2f8:	60 e0       	ldi	r22, 0x00	; 0
     2fa:	89 e2       	ldi	r24, 0x29	; 41
     2fc:	be df       	rcall	.-132    	; 0x27a <I2C_write>
     2fe:	60 e0       	ldi	r22, 0x00	; 0
     300:	8a e2       	ldi	r24, 0x2A	; 42
     302:	bb df       	rcall	.-138    	; 0x27a <I2C_write>
     304:	60 e0       	ldi	r22, 0x00	; 0
     306:	8b e2       	ldi	r24, 0x2B	; 43
     308:	b8 df       	rcall	.-144    	; 0x27a <I2C_write>
     30a:	60 e0       	ldi	r22, 0x00	; 0
     30c:	8c e2       	ldi	r24, 0x2C	; 44
     30e:	b5 df       	rcall	.-150    	; 0x27a <I2C_write>
     310:	60 e0       	ldi	r22, 0x00	; 0
     312:	8d e2       	ldi	r24, 0x2D	; 45
     314:	b2 df       	rcall	.-156    	; 0x27a <I2C_write>
     316:	60 e0       	ldi	r22, 0x00	; 0
     318:	8e e2       	ldi	r24, 0x2E	; 46
     31a:	af df       	rcall	.-162    	; 0x27a <I2C_write>
     31c:	60 e0       	ldi	r22, 0x00	; 0
     31e:	8f e2       	ldi	r24, 0x2F	; 47
     320:	ac df       	rcall	.-168    	; 0x27a <I2C_write>
     322:	60 e0       	ldi	r22, 0x00	; 0
     324:	80 e3       	ldi	r24, 0x30	; 48
     326:	a9 df       	rcall	.-174    	; 0x27a <I2C_write>
     328:	60 e0       	ldi	r22, 0x00	; 0
     32a:	81 e3       	ldi	r24, 0x31	; 49
     32c:	a6 df       	rcall	.-180    	; 0x27a <I2C_write>
     32e:	60 e0       	ldi	r22, 0x00	; 0
     330:	82 e3       	ldi	r24, 0x32	; 50
     332:	a3 df       	rcall	.-186    	; 0x27a <I2C_write>
     334:	60 e0       	ldi	r22, 0x00	; 0
     336:	83 e3       	ldi	r24, 0x33	; 51
     338:	a0 df       	rcall	.-192    	; 0x27a <I2C_write>
     33a:	60 e0       	ldi	r22, 0x00	; 0
     33c:	84 e3       	ldi	r24, 0x34	; 52
     33e:	9d df       	rcall	.-198    	; 0x27a <I2C_write>
     340:	60 e0       	ldi	r22, 0x00	; 0
     342:	85 e3       	ldi	r24, 0x35	; 53
     344:	9a df       	rcall	.-204    	; 0x27a <I2C_write>
     346:	60 e0       	ldi	r22, 0x00	; 0
     348:	87 e3       	ldi	r24, 0x37	; 55
     34a:	97 df       	rcall	.-210    	; 0x27a <I2C_write>
     34c:	60 e0       	ldi	r22, 0x00	; 0
     34e:	88 e3       	ldi	r24, 0x38	; 56
     350:	94 df       	rcall	.-216    	; 0x27a <I2C_write>
     352:	60 e0       	ldi	r22, 0x00	; 0
     354:	83 e6       	ldi	r24, 0x63	; 99
     356:	91 df       	rcall	.-222    	; 0x27a <I2C_write>
     358:	60 e0       	ldi	r22, 0x00	; 0
     35a:	84 e6       	ldi	r24, 0x64	; 100
     35c:	8e df       	rcall	.-228    	; 0x27a <I2C_write>
     35e:	60 e0       	ldi	r22, 0x00	; 0
     360:	85 e6       	ldi	r24, 0x65	; 101
     362:	8b df       	rcall	.-234    	; 0x27a <I2C_write>
     364:	60 e0       	ldi	r22, 0x00	; 0
     366:	86 e6       	ldi	r24, 0x66	; 102
     368:	88 df       	rcall	.-240    	; 0x27a <I2C_write>
     36a:	60 e0       	ldi	r22, 0x00	; 0
     36c:	87 e6       	ldi	r24, 0x67	; 103
     36e:	85 df       	rcall	.-246    	; 0x27a <I2C_write>
     370:	60 e0       	ldi	r22, 0x00	; 0
     372:	88 e6       	ldi	r24, 0x68	; 104
     374:	82 df       	rcall	.-252    	; 0x27a <I2C_write>
     376:	60 e0       	ldi	r22, 0x00	; 0
     378:	89 e6       	ldi	r24, 0x69	; 105
     37a:	7f df       	rcall	.-258    	; 0x27a <I2C_write>
     37c:	60 e0       	ldi	r22, 0x00	; 0
     37e:	8a e6       	ldi	r24, 0x6A	; 106
     380:	7c df       	rcall	.-264    	; 0x27a <I2C_write>
     382:	62 e0       	ldi	r22, 0x02	; 2
     384:	8b e6       	ldi	r24, 0x6B	; 107
     386:	79 df       	rcall	.-270    	; 0x27a <I2C_write>
     388:	60 e0       	ldi	r22, 0x00	; 0
     38a:	8c e6       	ldi	r24, 0x6C	; 108
     38c:	76 cf       	rjmp	.-276    	; 0x27a <I2C_write>
     38e:	08 95       	ret

00000390 <GET_ACCEL>:
     390:	1f df       	rcall	.-450    	; 0x1d0 <i2c_start_cond>
     392:	80 ed       	ldi	r24, 0xD0	; 208
     394:	28 df       	rcall	.-432    	; 0x1e6 <i2c_send_byte>
     396:	8b e3       	ldi	r24, 0x3B	; 59
     398:	26 df       	rcall	.-436    	; 0x1e6 <i2c_send_byte>
     39a:	de de       	rcall	.-580    	; 0x158 <i2c_stop_cond>
     39c:	19 df       	rcall	.-462    	; 0x1d0 <i2c_start_cond>
     39e:	81 ed       	ldi	r24, 0xD1	; 209
     3a0:	22 df       	rcall	.-444    	; 0x1e6 <i2c_send_byte>
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	42 df       	rcall	.-380    	; 0x22a <i2c_get_byte>
     3a6:	80 93 4c 02 	sts	0x024C, r24
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	3e df       	rcall	.-388    	; 0x22a <i2c_get_byte>
     3ae:	80 93 1d 02 	sts	0x021D, r24
     3b2:	80 e0       	ldi	r24, 0x00	; 0
     3b4:	3a df       	rcall	.-396    	; 0x22a <i2c_get_byte>
     3b6:	80 93 0b 02 	sts	0x020B, r24
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	36 df       	rcall	.-404    	; 0x22a <i2c_get_byte>
     3be:	80 93 4b 02 	sts	0x024B, r24
     3c2:	80 e0       	ldi	r24, 0x00	; 0
     3c4:	32 df       	rcall	.-412    	; 0x22a <i2c_get_byte>
     3c6:	80 93 24 02 	sts	0x0224, r24
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	2e df       	rcall	.-420    	; 0x22a <i2c_get_byte>
     3ce:	80 93 51 02 	sts	0x0251, r24
     3d2:	c2 de       	rcall	.-636    	; 0x158 <i2c_stop_cond>
     3d4:	80 91 4c 02 	lds	r24, 0x024C
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	98 2f       	mov	r25, r24
     3dc:	88 27       	eor	r24, r24
     3de:	20 91 1d 02 	lds	r18, 0x021D
     3e2:	82 0f       	add	r24, r18
     3e4:	91 1d       	adc	r25, r1
     3e6:	aa 27       	eor	r26, r26
     3e8:	97 fd       	sbrc	r25, 7
     3ea:	a0 95       	com	r26
     3ec:	ba 2f       	mov	r27, r26
     3ee:	80 93 42 02 	sts	0x0242, r24
     3f2:	90 93 43 02 	sts	0x0243, r25
     3f6:	a0 93 44 02 	sts	0x0244, r26
     3fa:	b0 93 45 02 	sts	0x0245, r27
     3fe:	80 91 0b 02 	lds	r24, 0x020B
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	98 2f       	mov	r25, r24
     406:	88 27       	eor	r24, r24
     408:	20 91 4b 02 	lds	r18, 0x024B
     40c:	82 0f       	add	r24, r18
     40e:	91 1d       	adc	r25, r1
     410:	aa 27       	eor	r26, r26
     412:	97 fd       	sbrc	r25, 7
     414:	a0 95       	com	r26
     416:	ba 2f       	mov	r27, r26
     418:	80 93 17 02 	sts	0x0217, r24
     41c:	90 93 18 02 	sts	0x0218, r25
     420:	a0 93 19 02 	sts	0x0219, r26
     424:	b0 93 1a 02 	sts	0x021A, r27
     428:	80 91 24 02 	lds	r24, 0x0224
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	98 2f       	mov	r25, r24
     430:	88 27       	eor	r24, r24
     432:	20 91 51 02 	lds	r18, 0x0251
     436:	82 0f       	add	r24, r18
     438:	91 1d       	adc	r25, r1
     43a:	aa 27       	eor	r26, r26
     43c:	97 fd       	sbrc	r25, 7
     43e:	a0 95       	com	r26
     440:	ba 2f       	mov	r27, r26
     442:	80 93 29 02 	sts	0x0229, r24
     446:	90 93 2a 02 	sts	0x022A, r25
     44a:	a0 93 2b 02 	sts	0x022B, r26
     44e:	b0 93 2c 02 	sts	0x022C, r27
     452:	08 95       	ret

00000454 <GET_GYRO>:
     454:	bd de       	rcall	.-646    	; 0x1d0 <i2c_start_cond>
     456:	80 ed       	ldi	r24, 0xD0	; 208
     458:	c6 de       	rcall	.-628    	; 0x1e6 <i2c_send_byte>
     45a:	83 e4       	ldi	r24, 0x43	; 67
     45c:	c4 de       	rcall	.-632    	; 0x1e6 <i2c_send_byte>
     45e:	7c de       	rcall	.-776    	; 0x158 <i2c_stop_cond>
     460:	b7 de       	rcall	.-658    	; 0x1d0 <i2c_start_cond>
     462:	81 ed       	ldi	r24, 0xD1	; 209
     464:	c0 de       	rcall	.-640    	; 0x1e6 <i2c_send_byte>
     466:	80 e0       	ldi	r24, 0x00	; 0
     468:	e0 de       	rcall	.-576    	; 0x22a <i2c_get_byte>
     46a:	80 93 53 02 	sts	0x0253, r24
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	dc de       	rcall	.-584    	; 0x22a <i2c_get_byte>
     472:	80 93 52 02 	sts	0x0252, r24
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	d8 de       	rcall	.-592    	; 0x22a <i2c_get_byte>
     47a:	80 93 1f 02 	sts	0x021F, r24
     47e:	80 e0       	ldi	r24, 0x00	; 0
     480:	d4 de       	rcall	.-600    	; 0x22a <i2c_get_byte>
     482:	80 93 16 02 	sts	0x0216, r24
     486:	80 e0       	ldi	r24, 0x00	; 0
     488:	d0 de       	rcall	.-608    	; 0x22a <i2c_get_byte>
     48a:	80 93 1c 02 	sts	0x021C, r24
     48e:	81 e0       	ldi	r24, 0x01	; 1
     490:	cc de       	rcall	.-616    	; 0x22a <i2c_get_byte>
     492:	80 93 0c 02 	sts	0x020C, r24
     496:	60 de       	rcall	.-832    	; 0x158 <i2c_stop_cond>
     498:	80 91 53 02 	lds	r24, 0x0253
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	98 2f       	mov	r25, r24
     4a0:	88 27       	eor	r24, r24
     4a2:	20 91 52 02 	lds	r18, 0x0252
     4a6:	82 0f       	add	r24, r18
     4a8:	91 1d       	adc	r25, r1
     4aa:	aa 27       	eor	r26, r26
     4ac:	97 fd       	sbrc	r25, 7
     4ae:	a0 95       	com	r26
     4b0:	ba 2f       	mov	r27, r26
     4b2:	80 93 3a 02 	sts	0x023A, r24
     4b6:	90 93 3b 02 	sts	0x023B, r25
     4ba:	a0 93 3c 02 	sts	0x023C, r26
     4be:	b0 93 3d 02 	sts	0x023D, r27
     4c2:	80 91 1f 02 	lds	r24, 0x021F
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	98 2f       	mov	r25, r24
     4ca:	88 27       	eor	r24, r24
     4cc:	20 91 16 02 	lds	r18, 0x0216
     4d0:	82 0f       	add	r24, r18
     4d2:	91 1d       	adc	r25, r1
     4d4:	aa 27       	eor	r26, r26
     4d6:	97 fd       	sbrc	r25, 7
     4d8:	a0 95       	com	r26
     4da:	ba 2f       	mov	r27, r26
     4dc:	80 93 58 02 	sts	0x0258, r24
     4e0:	90 93 59 02 	sts	0x0259, r25
     4e4:	a0 93 5a 02 	sts	0x025A, r26
     4e8:	b0 93 5b 02 	sts	0x025B, r27
     4ec:	80 91 1c 02 	lds	r24, 0x021C
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	98 2f       	mov	r25, r24
     4f4:	88 27       	eor	r24, r24
     4f6:	20 91 0c 02 	lds	r18, 0x020C
     4fa:	82 0f       	add	r24, r18
     4fc:	91 1d       	adc	r25, r1
     4fe:	aa 27       	eor	r26, r26
     500:	97 fd       	sbrc	r25, 7
     502:	a0 95       	com	r26
     504:	ba 2f       	mov	r27, r26
     506:	80 93 0d 02 	sts	0x020D, r24
     50a:	90 93 0e 02 	sts	0x020E, r25
     50e:	a0 93 0f 02 	sts	0x020F, r26
     512:	b0 93 10 02 	sts	0x0210, r27
     516:	08 95       	ret

00000518 <GET_TEMPER>:
     518:	5b de       	rcall	.-842    	; 0x1d0 <i2c_start_cond>
     51a:	80 ed       	ldi	r24, 0xD0	; 208
     51c:	64 de       	rcall	.-824    	; 0x1e6 <i2c_send_byte>
     51e:	81 e4       	ldi	r24, 0x41	; 65
     520:	62 de       	rcall	.-828    	; 0x1e6 <i2c_send_byte>
     522:	1a de       	rcall	.-972    	; 0x158 <i2c_stop_cond>
     524:	55 de       	rcall	.-854    	; 0x1d0 <i2c_start_cond>
     526:	81 ed       	ldi	r24, 0xD1	; 209
     528:	5e de       	rcall	.-836    	; 0x1e6 <i2c_send_byte>
     52a:	80 e0       	ldi	r24, 0x00	; 0
     52c:	7e de       	rcall	.-772    	; 0x22a <i2c_get_byte>
     52e:	80 93 46 02 	sts	0x0246, r24
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	7a de       	rcall	.-780    	; 0x22a <i2c_get_byte>
     536:	80 93 1b 02 	sts	0x021B, r24
     53a:	0e ce       	rjmp	.-996    	; 0x158 <i2c_stop_cond>
     53c:	08 95       	ret

0000053e <PORT_Init>:
     53e:	1b ba       	out	0x1b, r1	; 27
     540:	8f ef       	ldi	r24, 0xFF	; 255
     542:	8a bb       	out	0x1a, r24	; 26
     544:	18 ba       	out	0x18, r1	; 24
     546:	87 bb       	out	0x17, r24	; 23
     548:	15 ba       	out	0x15, r1	; 21
     54a:	84 bb       	out	0x14, r24	; 20
     54c:	12 ba       	out	0x12, r1	; 18
     54e:	11 ba       	out	0x11, r1	; 17
     550:	13 b8       	out	0x03, r1	; 3
     552:	82 b9       	out	0x02, r24	; 2
     554:	10 92 62 00 	sts	0x0062, r1
     558:	80 ef       	ldi	r24, 0xF0	; 240
     55a:	80 93 61 00 	sts	0x0061, r24
     55e:	08 95       	ret

00000560 <USART1_Init>:
     560:	90 93 98 00 	sts	0x0098, r25
     564:	80 93 99 00 	sts	0x0099, r24
     568:	88 e9       	ldi	r24, 0x98	; 152
     56a:	80 93 9a 00 	sts	0x009A, r24
     56e:	8e e0       	ldi	r24, 0x0E	; 14
     570:	80 93 9d 00 	sts	0x009D, r24
     574:	08 95       	ret

00000576 <TIMER0_Init>:
     576:	13 be       	out	0x33, r1	; 51
     578:	10 be       	out	0x30, r1	; 48
     57a:	12 be       	out	0x32, r1	; 50
     57c:	89 ef       	ldi	r24, 0xF9	; 249
     57e:	81 bf       	out	0x31, r24	; 49
     580:	8f e0       	ldi	r24, 0x0F	; 15
     582:	83 bf       	out	0x33, r24	; 51
     584:	87 b7       	in	r24, 0x37	; 55
     586:	82 60       	ori	r24, 0x02	; 2
     588:	87 bf       	out	0x37, r24	; 55
     58a:	08 95       	ret

0000058c <TIMER1_Init>:
     58c:	1e bc       	out	0x2e, r1	; 46
     58e:	1d bc       	out	0x2d, r1	; 45
     590:	1c bc       	out	0x2c, r1	; 44
     592:	82 e0       	ldi	r24, 0x02	; 2
     594:	8b bd       	out	0x2b, r24	; 43
     596:	81 e7       	ldi	r24, 0x71	; 113
     598:	8a bd       	out	0x2a, r24	; 42
     59a:	19 bc       	out	0x29, r1	; 41
     59c:	18 bc       	out	0x28, r1	; 40
     59e:	10 92 79 00 	sts	0x0079, r1
     5a2:	10 92 78 00 	sts	0x0078, r1
     5a6:	17 bc       	out	0x27, r1	; 39
     5a8:	16 bc       	out	0x26, r1	; 38
     5aa:	1f bc       	out	0x2f, r1	; 47
     5ac:	8c e0       	ldi	r24, 0x0C	; 12
     5ae:	8e bd       	out	0x2e, r24	; 46
     5b0:	87 b7       	in	r24, 0x37	; 55
     5b2:	80 61       	ori	r24, 0x10	; 16
     5b4:	87 bf       	out	0x37, r24	; 55
     5b6:	08 95       	ret

000005b8 <TIMER2_Init>:
     5b8:	15 bc       	out	0x25, r1	; 37
     5ba:	14 bc       	out	0x24, r1	; 36
     5bc:	8c e7       	ldi	r24, 0x7C	; 124
     5be:	83 bd       	out	0x23, r24	; 35
     5c0:	8d e0       	ldi	r24, 0x0D	; 13
     5c2:	85 bd       	out	0x25, r24	; 37
     5c4:	87 b7       	in	r24, 0x37	; 55
     5c6:	80 68       	ori	r24, 0x80	; 128
     5c8:	87 bf       	out	0x37, r24	; 55
     5ca:	08 95       	ret

000005cc <__vector_15>:
     5cc:	1f 92       	push	r1
     5ce:	0f 92       	push	r0
     5d0:	0f b6       	in	r0, 0x3f	; 63
     5d2:	0f 92       	push	r0
     5d4:	11 24       	eor	r1, r1
     5d6:	8f 93       	push	r24
     5d8:	9f 93       	push	r25
     5da:	80 91 4d 02 	lds	r24, 0x024D
     5de:	90 91 4e 02 	lds	r25, 0x024E
     5e2:	01 96       	adiw	r24, 0x01	; 1
     5e4:	90 93 4e 02 	sts	0x024E, r25
     5e8:	80 93 4d 02 	sts	0x024D, r24
     5ec:	4e 97       	sbiw	r24, 0x1e	; 30
     5ee:	41 f4       	brne	.+16     	; 0x600 <__vector_15+0x34>
     5f0:	95 b3       	in	r25, 0x15	; 21
     5f2:	80 e2       	ldi	r24, 0x20	; 32
     5f4:	89 27       	eor	r24, r25
     5f6:	85 bb       	out	0x15, r24	; 21
     5f8:	10 92 4e 02 	sts	0x024E, r1
     5fc:	10 92 4d 02 	sts	0x024D, r1
     600:	9f 91       	pop	r25
     602:	8f 91       	pop	r24
     604:	0f 90       	pop	r0
     606:	0f be       	out	0x3f, r0	; 63
     608:	0f 90       	pop	r0
     60a:	1f 90       	pop	r1
     60c:	18 95       	reti

0000060e <__vector_12>:
     60e:	1f 92       	push	r1
     610:	0f 92       	push	r0
     612:	0f b6       	in	r0, 0x3f	; 63
     614:	0f 92       	push	r0
     616:	11 24       	eor	r1, r1
     618:	8f 93       	push	r24
     61a:	9f 93       	push	r25
     61c:	80 91 60 02 	lds	r24, 0x0260
     620:	90 91 61 02 	lds	r25, 0x0261
     624:	01 96       	adiw	r24, 0x01	; 1
     626:	90 93 61 02 	sts	0x0261, r25
     62a:	80 93 60 02 	sts	0x0260, r24
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	80 93 1e 02 	sts	0x021E, r24
     634:	9f 91       	pop	r25
     636:	8f 91       	pop	r24
     638:	0f 90       	pop	r0
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	0f 90       	pop	r0
     63e:	1f 90       	pop	r1
     640:	18 95       	reti

00000642 <__vector_9>:
     642:	1f 92       	push	r1
     644:	0f 92       	push	r0
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	0f 92       	push	r0
     64a:	11 24       	eor	r1, r1
     64c:	0b b6       	in	r0, 0x3b	; 59
     64e:	0f 92       	push	r0
     650:	2f 93       	push	r18
     652:	3f 93       	push	r19
     654:	4f 93       	push	r20
     656:	5f 93       	push	r21
     658:	6f 93       	push	r22
     65a:	7f 93       	push	r23
     65c:	8f 93       	push	r24
     65e:	9f 93       	push	r25
     660:	af 93       	push	r26
     662:	bf 93       	push	r27
     664:	cf 93       	push	r28
     666:	df 93       	push	r29
     668:	ef 93       	push	r30
     66a:	ff 93       	push	r31
     66c:	80 91 31 02 	lds	r24, 0x0231
     670:	8f 5f       	subi	r24, 0xFF	; 255
     672:	80 93 31 02 	sts	0x0231, r24
     676:	8d 37       	cpi	r24, 0x7D	; 125
     678:	70 f1       	brcs	.+92     	; 0x6d6 <__vector_9+0x94>
     67a:	80 91 60 02 	lds	r24, 0x0260
     67e:	90 91 61 02 	lds	r25, 0x0261
     682:	90 93 35 02 	sts	0x0235, r25
     686:	80 93 34 02 	sts	0x0234, r24
     68a:	10 92 61 02 	sts	0x0261, r1
     68e:	10 92 60 02 	sts	0x0260, r1
     692:	c0 91 4f 02 	lds	r28, 0x024F
     696:	d0 91 50 02 	lds	r29, 0x0250
     69a:	9e 01       	movw	r18, r28
     69c:	40 e0       	ldi	r20, 0x00	; 0
     69e:	50 e0       	ldi	r21, 0x00	; 0
     6a0:	60 91 01 01 	lds	r22, 0x0101
     6a4:	70 91 02 01 	lds	r23, 0x0102
     6a8:	80 91 03 01 	lds	r24, 0x0103
     6ac:	90 91 04 01 	lds	r25, 0x0104
     6b0:	58 d5       	rcall	.+2736   	; 0x1162 <__divmodsi4>
     6b2:	20 93 54 02 	sts	0x0254, r18
     6b6:	30 93 55 02 	sts	0x0255, r19
     6ba:	40 93 56 02 	sts	0x0256, r20
     6be:	50 93 57 02 	sts	0x0257, r21
     6c2:	10 92 31 02 	sts	0x0231, r1
     6c6:	d0 93 33 02 	sts	0x0233, r29
     6ca:	c0 93 32 02 	sts	0x0232, r28
     6ce:	10 92 50 02 	sts	0x0250, r1
     6d2:	10 92 4f 02 	sts	0x024F, r1
     6d6:	ff 91       	pop	r31
     6d8:	ef 91       	pop	r30
     6da:	df 91       	pop	r29
     6dc:	cf 91       	pop	r28
     6de:	bf 91       	pop	r27
     6e0:	af 91       	pop	r26
     6e2:	9f 91       	pop	r25
     6e4:	8f 91       	pop	r24
     6e6:	7f 91       	pop	r23
     6e8:	6f 91       	pop	r22
     6ea:	5f 91       	pop	r21
     6ec:	4f 91       	pop	r20
     6ee:	3f 91       	pop	r19
     6f0:	2f 91       	pop	r18
     6f2:	0f 90       	pop	r0
     6f4:	0b be       	out	0x3b, r0	; 59
     6f6:	0f 90       	pop	r0
     6f8:	0f be       	out	0x3f, r0	; 63
     6fa:	0f 90       	pop	r0
     6fc:	1f 90       	pop	r1
     6fe:	18 95       	reti

00000700 <__vector_30>:
     700:	1f 92       	push	r1
     702:	0f 92       	push	r0
     704:	0f b6       	in	r0, 0x3f	; 63
     706:	0f 92       	push	r0
     708:	11 24       	eor	r1, r1
     70a:	0b b6       	in	r0, 0x3b	; 59
     70c:	0f 92       	push	r0
     70e:	2f 93       	push	r18
     710:	3f 93       	push	r19
     712:	4f 93       	push	r20
     714:	5f 93       	push	r21
     716:	6f 93       	push	r22
     718:	7f 93       	push	r23
     71a:	8f 93       	push	r24
     71c:	9f 93       	push	r25
     71e:	af 93       	push	r26
     720:	bf 93       	push	r27
     722:	ef 93       	push	r30
     724:	ff 93       	push	r31
     726:	e3 dc       	rcall	.-1594   	; 0xee <UART1_Receive>
     728:	01 dd       	rcall	.-1534   	; 0x12c <read_mass>
     72a:	85 b3       	in	r24, 0x15	; 21
     72c:	80 58       	subi	r24, 0x80	; 128
     72e:	85 bb       	out	0x15, r24	; 21
     730:	ff 91       	pop	r31
     732:	ef 91       	pop	r30
     734:	bf 91       	pop	r27
     736:	af 91       	pop	r26
     738:	9f 91       	pop	r25
     73a:	8f 91       	pop	r24
     73c:	7f 91       	pop	r23
     73e:	6f 91       	pop	r22
     740:	5f 91       	pop	r21
     742:	4f 91       	pop	r20
     744:	3f 91       	pop	r19
     746:	2f 91       	pop	r18
     748:	0f 90       	pop	r0
     74a:	0b be       	out	0x3b, r0	; 59
     74c:	0f 90       	pop	r0
     74e:	0f be       	out	0x3f, r0	; 63
     750:	0f 90       	pop	r0
     752:	1f 90       	pop	r1
     754:	18 95       	reti

00000756 <CommandXA>:
     756:	80 91 5d 02 	lds	r24, 0x025D
     75a:	de dc       	rcall	.-1604   	; 0x118 <ascii_8>
     75c:	80 91 5c 02 	lds	r24, 0x025C
     760:	db dc       	rcall	.-1610   	; 0x118 <ascii_8>
     762:	8d e0       	ldi	r24, 0x0D	; 13
     764:	bc cc       	rjmp	.-1672   	; 0xde <UART1_Transmit>
     766:	08 95       	ret

00000768 <CommandXB>:
     768:	80 91 43 02 	lds	r24, 0x0243
     76c:	d5 dc       	rcall	.-1622   	; 0x118 <ascii_8>
     76e:	80 91 42 02 	lds	r24, 0x0242
     772:	d2 dc       	rcall	.-1628   	; 0x118 <ascii_8>
     774:	8d e0       	ldi	r24, 0x0D	; 13
     776:	b3 cc       	rjmp	.-1690   	; 0xde <UART1_Transmit>
     778:	08 95       	ret

0000077a <CommandXC>:
     77a:	80 91 3b 02 	lds	r24, 0x023B
     77e:	cc dc       	rcall	.-1640   	; 0x118 <ascii_8>
     780:	80 91 3a 02 	lds	r24, 0x023A
     784:	c9 dc       	rcall	.-1646   	; 0x118 <ascii_8>
     786:	8d e0       	ldi	r24, 0x0D	; 13
     788:	aa cc       	rjmp	.-1708   	; 0xde <UART1_Transmit>
     78a:	08 95       	ret

0000078c <CommandXD>:
     78c:	80 91 33 02 	lds	r24, 0x0233
     790:	c3 dc       	rcall	.-1658   	; 0x118 <ascii_8>
     792:	80 91 32 02 	lds	r24, 0x0232
     796:	c0 dc       	rcall	.-1664   	; 0x118 <ascii_8>
     798:	8d e0       	ldi	r24, 0x0D	; 13
     79a:	a1 cc       	rjmp	.-1726   	; 0xde <UART1_Transmit>
     79c:	08 95       	ret

0000079e <CommandYA>:
     79e:	80 91 26 02 	lds	r24, 0x0226
     7a2:	ba dc       	rcall	.-1676   	; 0x118 <ascii_8>
     7a4:	80 91 25 02 	lds	r24, 0x0225
     7a8:	b7 dc       	rcall	.-1682   	; 0x118 <ascii_8>
     7aa:	8d e0       	ldi	r24, 0x0D	; 13
     7ac:	98 cc       	rjmp	.-1744   	; 0xde <UART1_Transmit>
     7ae:	08 95       	ret

000007b0 <CommandYB>:
     7b0:	80 91 18 02 	lds	r24, 0x0218
     7b4:	b1 dc       	rcall	.-1694   	; 0x118 <ascii_8>
     7b6:	80 91 17 02 	lds	r24, 0x0217
     7ba:	ae dc       	rcall	.-1700   	; 0x118 <ascii_8>
     7bc:	8d e0       	ldi	r24, 0x0D	; 13
     7be:	8f cc       	rjmp	.-1762   	; 0xde <UART1_Transmit>
     7c0:	08 95       	ret

000007c2 <CommandYC>:
     7c2:	80 91 59 02 	lds	r24, 0x0259
     7c6:	a8 dc       	rcall	.-1712   	; 0x118 <ascii_8>
     7c8:	80 91 58 02 	lds	r24, 0x0258
     7cc:	a5 dc       	rcall	.-1718   	; 0x118 <ascii_8>
     7ce:	8d e0       	ldi	r24, 0x0D	; 13
     7d0:	86 cc       	rjmp	.-1780   	; 0xde <UART1_Transmit>
     7d2:	08 95       	ret

000007d4 <CommandYD>:
     7d4:	80 91 35 02 	lds	r24, 0x0235
     7d8:	9f dc       	rcall	.-1730   	; 0x118 <ascii_8>
     7da:	80 91 34 02 	lds	r24, 0x0234
     7de:	9c dc       	rcall	.-1736   	; 0x118 <ascii_8>
     7e0:	8d e0       	ldi	r24, 0x0D	; 13
     7e2:	7d cc       	rjmp	.-1798   	; 0xde <UART1_Transmit>
     7e4:	08 95       	ret

000007e6 <CommandZA>:
     7e6:	80 91 37 02 	lds	r24, 0x0237
     7ea:	96 dc       	rcall	.-1748   	; 0x118 <ascii_8>
     7ec:	80 91 36 02 	lds	r24, 0x0236
     7f0:	93 dc       	rcall	.-1754   	; 0x118 <ascii_8>
     7f2:	8d e0       	ldi	r24, 0x0D	; 13
     7f4:	74 cc       	rjmp	.-1816   	; 0xde <UART1_Transmit>
     7f6:	08 95       	ret

000007f8 <CommandZB>:
     7f8:	80 91 2a 02 	lds	r24, 0x022A
     7fc:	8d dc       	rcall	.-1766   	; 0x118 <ascii_8>
     7fe:	80 91 29 02 	lds	r24, 0x0229
     802:	8a dc       	rcall	.-1772   	; 0x118 <ascii_8>
     804:	8d e0       	ldi	r24, 0x0D	; 13
     806:	6b cc       	rjmp	.-1834   	; 0xde <UART1_Transmit>
     808:	08 95       	ret

0000080a <CommandZC>:
     80a:	80 91 0e 02 	lds	r24, 0x020E
     80e:	84 dc       	rcall	.-1784   	; 0x118 <ascii_8>
     810:	80 91 0d 02 	lds	r24, 0x020D
     814:	81 dc       	rcall	.-1790   	; 0x118 <ascii_8>
     816:	8d e0       	ldi	r24, 0x0D	; 13
     818:	62 cc       	rjmp	.-1852   	; 0xde <UART1_Transmit>
     81a:	08 95       	ret

0000081c <CommandZD>:
     81c:	80 91 55 02 	lds	r24, 0x0255
     820:	7b dc       	rcall	.-1802   	; 0x118 <ascii_8>
     822:	80 91 54 02 	lds	r24, 0x0254
     826:	78 dc       	rcall	.-1808   	; 0x118 <ascii_8>
     828:	8d e0       	ldi	r24, 0x0D	; 13
     82a:	59 cc       	rjmp	.-1870   	; 0xde <UART1_Transmit>
     82c:	08 95       	ret

0000082e <CommandTA>:
     82e:	0f 93       	push	r16
     830:	1f 93       	push	r17
     832:	00 91 46 02 	lds	r16, 0x0246
     836:	11 27       	eor	r17, r17
     838:	07 fd       	sbrc	r16, 7
     83a:	10 95       	com	r17
     83c:	10 2f       	mov	r17, r16
     83e:	00 27       	eor	r16, r16
     840:	22 27       	eor	r18, r18
     842:	17 fd       	sbrc	r17, 7
     844:	20 95       	com	r18
     846:	32 2f       	mov	r19, r18
     848:	60 91 1b 02 	lds	r22, 0x021B
     84c:	86 2f       	mov	r24, r22
     84e:	99 27       	eor	r25, r25
     850:	87 fd       	sbrc	r24, 7
     852:	90 95       	com	r25
     854:	a9 2f       	mov	r26, r25
     856:	b9 2f       	mov	r27, r25
     858:	80 0f       	add	r24, r16
     85a:	91 1f       	adc	r25, r17
     85c:	a2 1f       	adc	r26, r18
     85e:	b3 1f       	adc	r27, r19
     860:	bc 01       	movw	r22, r24
     862:	cd 01       	movw	r24, r26
     864:	64 58       	subi	r22, 0x84	; 132
     866:	7f 4c       	sbci	r23, 0xCF	; 207
     868:	8f 4f       	sbci	r24, 0xFF	; 255
     86a:	9f 4f       	sbci	r25, 0xFF	; 255
     86c:	24 e5       	ldi	r18, 0x54	; 84
     86e:	31 e0       	ldi	r19, 0x01	; 1
     870:	40 e0       	ldi	r20, 0x00	; 0
     872:	50 e0       	ldi	r21, 0x00	; 0
     874:	76 d4       	rcall	.+2284   	; 0x1162 <__divmodsi4>
     876:	83 2f       	mov	r24, r19
     878:	20 93 07 02 	sts	0x0207, r18
     87c:	30 93 08 02 	sts	0x0208, r19
     880:	40 93 09 02 	sts	0x0209, r20
     884:	50 93 0a 02 	sts	0x020A, r21
     888:	47 dc       	rcall	.-1906   	; 0x118 <ascii_8>
     88a:	80 91 07 02 	lds	r24, 0x0207
     88e:	44 dc       	rcall	.-1912   	; 0x118 <ascii_8>
     890:	8d e0       	ldi	r24, 0x0D	; 13
     892:	25 dc       	rcall	.-1974   	; 0xde <UART1_Transmit>
     894:	1f 91       	pop	r17
     896:	0f 91       	pop	r16
     898:	08 95       	ret

0000089a <CommandRX>:
     89a:	80 91 08 01 	lds	r24, 0x0108
     89e:	81 34       	cpi	r24, 0x41	; 65
     8a0:	11 f4       	brne	.+4      	; 0x8a6 <CommandRX+0xc>
     8a2:	59 cf       	rjmp	.-334    	; 0x756 <CommandXA>
     8a4:	08 95       	ret
     8a6:	82 34       	cpi	r24, 0x42	; 66
     8a8:	11 f4       	brne	.+4      	; 0x8ae <CommandRX+0x14>
     8aa:	5e cf       	rjmp	.-324    	; 0x768 <CommandXB>
     8ac:	08 95       	ret
     8ae:	83 34       	cpi	r24, 0x43	; 67
     8b0:	11 f4       	brne	.+4      	; 0x8b6 <CommandRX+0x1c>
     8b2:	63 cf       	rjmp	.-314    	; 0x77a <CommandXC>
     8b4:	08 95       	ret
     8b6:	84 34       	cpi	r24, 0x44	; 68
     8b8:	11 f4       	brne	.+4      	; 0x8be <CommandRX+0x24>
     8ba:	68 cf       	rjmp	.-304    	; 0x78c <CommandXD>
     8bc:	08 95       	ret
     8be:	8f e3       	ldi	r24, 0x3F	; 63
     8c0:	0e dc       	rcall	.-2020   	; 0xde <UART1_Transmit>
     8c2:	10 92 06 02 	sts	0x0206, r1
     8c6:	10 92 05 02 	sts	0x0205, r1
     8ca:	08 95       	ret

000008cc <CommandRY>:
     8cc:	80 91 08 01 	lds	r24, 0x0108
     8d0:	81 34       	cpi	r24, 0x41	; 65
     8d2:	11 f4       	brne	.+4      	; 0x8d8 <CommandRY+0xc>
     8d4:	64 cf       	rjmp	.-312    	; 0x79e <CommandYA>
     8d6:	08 95       	ret
     8d8:	82 34       	cpi	r24, 0x42	; 66
     8da:	11 f4       	brne	.+4      	; 0x8e0 <CommandRY+0x14>
     8dc:	69 cf       	rjmp	.-302    	; 0x7b0 <CommandYB>
     8de:	08 95       	ret
     8e0:	83 34       	cpi	r24, 0x43	; 67
     8e2:	11 f4       	brne	.+4      	; 0x8e8 <CommandRY+0x1c>
     8e4:	6e cf       	rjmp	.-292    	; 0x7c2 <CommandYC>
     8e6:	08 95       	ret
     8e8:	84 34       	cpi	r24, 0x44	; 68
     8ea:	11 f4       	brne	.+4      	; 0x8f0 <CommandRY+0x24>
     8ec:	73 cf       	rjmp	.-282    	; 0x7d4 <CommandYD>
     8ee:	08 95       	ret
     8f0:	8f e3       	ldi	r24, 0x3F	; 63
     8f2:	f5 db       	rcall	.-2070   	; 0xde <UART1_Transmit>
     8f4:	10 92 06 02 	sts	0x0206, r1
     8f8:	10 92 05 02 	sts	0x0205, r1
     8fc:	08 95       	ret

000008fe <CommandRZ>:
     8fe:	80 91 08 01 	lds	r24, 0x0108
     902:	81 34       	cpi	r24, 0x41	; 65
     904:	11 f4       	brne	.+4      	; 0x90a <CommandRZ+0xc>
     906:	6f cf       	rjmp	.-290    	; 0x7e6 <CommandZA>
     908:	08 95       	ret
     90a:	82 34       	cpi	r24, 0x42	; 66
     90c:	11 f4       	brne	.+4      	; 0x912 <CommandRZ+0x14>
     90e:	74 cf       	rjmp	.-280    	; 0x7f8 <CommandZB>
     910:	08 95       	ret
     912:	83 34       	cpi	r24, 0x43	; 67
     914:	11 f4       	brne	.+4      	; 0x91a <CommandRZ+0x1c>
     916:	79 cf       	rjmp	.-270    	; 0x80a <CommandZC>
     918:	08 95       	ret
     91a:	84 34       	cpi	r24, 0x44	; 68
     91c:	11 f4       	brne	.+4      	; 0x922 <CommandRZ+0x24>
     91e:	7e cf       	rjmp	.-260    	; 0x81c <CommandZD>
     920:	08 95       	ret
     922:	8f e3       	ldi	r24, 0x3F	; 63
     924:	dc db       	rcall	.-2120   	; 0xde <UART1_Transmit>
     926:	10 92 06 02 	sts	0x0206, r1
     92a:	10 92 05 02 	sts	0x0205, r1
     92e:	08 95       	ret

00000930 <CommandRT>:
     930:	80 91 08 01 	lds	r24, 0x0108
     934:	81 34       	cpi	r24, 0x41	; 65
     936:	11 f4       	brne	.+4      	; 0x93c <CommandRT+0xc>
     938:	7a cf       	rjmp	.-268    	; 0x82e <CommandTA>
     93a:	08 95       	ret
     93c:	8f e3       	ldi	r24, 0x3F	; 63
     93e:	cf db       	rcall	.-2146   	; 0xde <UART1_Transmit>
     940:	10 92 06 02 	sts	0x0206, r1
     944:	10 92 05 02 	sts	0x0205, r1
     948:	08 95       	ret

0000094a <CommandR>:
     94a:	80 91 07 01 	lds	r24, 0x0107
     94e:	88 35       	cpi	r24, 0x58	; 88
     950:	11 f4       	brne	.+4      	; 0x956 <CommandR+0xc>
     952:	a3 cf       	rjmp	.-186    	; 0x89a <CommandRX>
     954:	08 95       	ret
     956:	89 35       	cpi	r24, 0x59	; 89
     958:	11 f4       	brne	.+4      	; 0x95e <CommandR+0x14>
     95a:	b8 cf       	rjmp	.-144    	; 0x8cc <CommandRY>
     95c:	08 95       	ret
     95e:	8a 35       	cpi	r24, 0x5A	; 90
     960:	11 f4       	brne	.+4      	; 0x966 <CommandR+0x1c>
     962:	cd cf       	rjmp	.-102    	; 0x8fe <CommandRZ>
     964:	08 95       	ret
     966:	84 35       	cpi	r24, 0x54	; 84
     968:	11 f4       	brne	.+4      	; 0x96e <CommandR+0x24>
     96a:	e2 cf       	rjmp	.-60     	; 0x930 <CommandRT>
     96c:	08 95       	ret
     96e:	8f e3       	ldi	r24, 0x3F	; 63
     970:	b6 db       	rcall	.-2196   	; 0xde <UART1_Transmit>
     972:	10 92 06 02 	sts	0x0206, r1
     976:	10 92 05 02 	sts	0x0205, r1
     97a:	08 95       	ret

0000097c <main>:




int main(void)
{
     97c:	cf 93       	push	r28
     97e:	df 93       	push	r29
     980:	cd b7       	in	r28, 0x3d	; 61
     982:	de b7       	in	r29, 0x3e	; 62
     984:	60 97       	sbiw	r28, 0x10	; 16
     986:	0f b6       	in	r0, 0x3f	; 63
     988:	f8 94       	cli
     98a:	de bf       	out	0x3e, r29	; 62
     98c:	0f be       	out	0x3f, r0	; 63
     98e:	cd bf       	out	0x3d, r28	; 61
	
	cli ();
     990:	f8 94       	cli
	PORT_Init();
     992:	d5 dd       	rcall	.-1110   	; 0x53e <PORT_Init>
	TIMER0_Init();
     994:	f0 dd       	rcall	.-1056   	; 0x576 <TIMER0_Init>
	TIMER1_Init();
     996:	fa dd       	rcall	.-1036   	; 0x58c <TIMER1_Init>
	TIMER2_Init();
     998:	0f de       	rcall	.-994    	; 0x5b8 <TIMER2_Init>
	USART1_Init(12);//9600- 103. 76800-12
     99a:	8c e0       	ldi	r24, 0x0C	; 12
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	e0 dd       	rcall	.-1088   	; 0x560 <USART1_Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9a0:	2f ef       	ldi	r18, 0xFF	; 255
     9a2:	83 ed       	ldi	r24, 0xD3	; 211
     9a4:	90 e3       	ldi	r25, 0x30	; 48
     9a6:	21 50       	subi	r18, 0x01	; 1
     9a8:	80 40       	sbci	r24, 0x00	; 0
     9aa:	90 40       	sbci	r25, 0x00	; 0
     9ac:	e1 f7       	brne	.-8      	; 0x9a6 <main+0x2a>
     9ae:	00 c0       	rjmp	.+0      	; 0x9b0 <main+0x34>
     9b0:	00 00       	nop
     9b2:	af ef       	ldi	r26, 0xFF	; 255
     9b4:	b3 ed       	ldi	r27, 0xD3	; 211
     9b6:	e0 e3       	ldi	r30, 0x30	; 48
     9b8:	a1 50       	subi	r26, 0x01	; 1
     9ba:	b0 40       	sbci	r27, 0x00	; 0
     9bc:	e0 40       	sbci	r30, 0x00	; 0
     9be:	e1 f7       	brne	.-8      	; 0x9b8 <main+0x3c>
     9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <main+0x46>
     9c2:	00 00       	nop
	_delay_ms(1000);
	_delay_ms(1000);
	i2c_init();
     9c4:	fe db       	rcall	.-2052   	; 0x1c2 <i2c_init>
     9c6:	ff ef       	ldi	r31, 0xFF	; 255
     9c8:	23 ed       	ldi	r18, 0xD3	; 211
     9ca:	80 e3       	ldi	r24, 0x30	; 48
     9cc:	f1 50       	subi	r31, 0x01	; 1
     9ce:	20 40       	sbci	r18, 0x00	; 0
     9d0:	80 40       	sbci	r24, 0x00	; 0
     9d2:	e1 f7       	brne	.-8      	; 0x9cc <main+0x50>
     9d4:	00 c0       	rjmp	.+0      	; 0x9d6 <main+0x5a>
     9d6:	00 00       	nop
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	a3 ed       	ldi	r26, 0xD3	; 211
     9dc:	b0 e3       	ldi	r27, 0x30	; 48
     9de:	91 50       	subi	r25, 0x01	; 1
     9e0:	a0 40       	sbci	r26, 0x00	; 0
     9e2:	b0 40       	sbci	r27, 0x00	; 0
     9e4:	e1 f7       	brne	.-8      	; 0x9de <main+0x62>
     9e6:	00 c0       	rjmp	.+0      	; 0x9e8 <main+0x6c>
     9e8:	00 00       	nop
	_delay_ms(1000);
	_delay_ms(1000);
	Init_6050();
     9ea:	56 dc       	rcall	.-1876   	; 0x298 <Init_6050>
     9ec:	ef ef       	ldi	r30, 0xFF	; 255
     9ee:	f3 ed       	ldi	r31, 0xD3	; 211
     9f0:	20 e3       	ldi	r18, 0x30	; 48
     9f2:	e1 50       	subi	r30, 0x01	; 1
     9f4:	f0 40       	sbci	r31, 0x00	; 0
     9f6:	20 40       	sbci	r18, 0x00	; 0
     9f8:	e1 f7       	brne	.-8      	; 0x9f2 <main+0x76>
     9fa:	00 c0       	rjmp	.+0      	; 0x9fc <main+0x80>
     9fc:	00 00       	nop
	_delay_ms(1000);
	Init_6050();
     9fe:	4c dc       	rcall	.-1896   	; 0x298 <Init_6050>
	sei(); // Разрешить прерывания
     a00:	78 94       	sei
	
	float tmp1 = 0, tmp2 = 0;
     a02:	1d 86       	std	Y+13, r1	; 0x0d
     a04:	1e 86       	std	Y+14, r1	; 0x0e
     a06:	1f 86       	std	Y+15, r1	; 0x0f
     a08:	18 8a       	std	Y+16, r1	; 0x10
		
		 if (Priem == 1)
		 {
			  
			 Priem = 0;
			 if (glavmas[0] == 'R')  // проверяем первый символ
     a0a:	06 e0       	ldi	r16, 0x06	; 6
     a0c:	11 e0       	ldi	r17, 0x01	; 1
	
    while(1)
	
    {
		
		CountP++;// числоциклов выполнения программы.
     a0e:	80 91 4f 02 	lds	r24, 0x024F
     a12:	90 91 50 02 	lds	r25, 0x0250
     a16:	01 96       	adiw	r24, 0x01	; 1
     a18:	90 93 50 02 	sts	0x0250, r25
     a1c:	80 93 4f 02 	sts	0x024F, r24
				
		
		
		
		if (Izmeren == 1)
     a20:	80 91 1e 02 	lds	r24, 0x021E
     a24:	81 30       	cpi	r24, 0x01	; 1
     a26:	61 f5       	brne	.+88     	; 0xa80 <main+0x104>
		{
			GET_GYRO ();
     a28:	15 dd       	rcall	.-1494   	; 0x454 <GET_GYRO>
			
			
			tmp1 = GYRO_Z;
     a2a:	60 91 0d 02 	lds	r22, 0x020D
     a2e:	70 91 0e 02 	lds	r23, 0x020E
     a32:	80 91 0f 02 	lds	r24, 0x020F
     a36:	90 91 10 02 	lds	r25, 0x0210
     a3a:	1e d2       	rcall	.+1084   	; 0xe78 <__floatsisf>
			//tmp2 = Rez_GYRO_Z;
			tmp2 = tmp2 + (tmp1*0.061*0.01);
     a3c:	23 e2       	ldi	r18, 0x23	; 35
     a3e:	3b ed       	ldi	r19, 0xDB	; 219
     a40:	49 e7       	ldi	r20, 0x79	; 121
     a42:	5d e3       	ldi	r21, 0x3D	; 61
     a44:	d1 d2       	rcall	.+1442   	; 0xfe8 <__mulsf3>
     a46:	2a e0       	ldi	r18, 0x0A	; 10
     a48:	37 ed       	ldi	r19, 0xD7	; 215
     a4a:	43 e2       	ldi	r20, 0x23	; 35
     a4c:	5c e3       	ldi	r21, 0x3C	; 60
     a4e:	cc d2       	rcall	.+1432   	; 0xfe8 <__mulsf3>
     a50:	9b 01       	movw	r18, r22
     a52:	ac 01       	movw	r20, r24
     a54:	6d 85       	ldd	r22, Y+13	; 0x0d
     a56:	7e 85       	ldd	r23, Y+14	; 0x0e
     a58:	8f 85       	ldd	r24, Y+15	; 0x0f
     a5a:	98 89       	ldd	r25, Y+16	; 0x10
     a5c:	e6 d0       	rcall	.+460    	; 0xc2a <__addsf3>
     a5e:	6d 87       	std	Y+13, r22	; 0x0d
     a60:	7e 87       	std	Y+14, r23	; 0x0e
     a62:	8f 87       	std	Y+15, r24	; 0x0f
     a64:	98 8b       	std	Y+16, r25	; 0x10
			
			Rez_GYRO_Z = tmp2;
     a66:	d5 d1       	rcall	.+938    	; 0xe12 <__fixsfsi>
     a68:	60 93 54 02 	sts	0x0254, r22
     a6c:	70 93 55 02 	sts	0x0255, r23
     a70:	80 93 56 02 	sts	0x0256, r24
     a74:	90 93 57 02 	sts	0x0257, r25
			
			GET_ACCEL();
     a78:	8b dc       	rcall	.-1770   	; 0x390 <GET_ACCEL>
			GET_TEMPER();
     a7a:	4e dd       	rcall	.-1380   	; 0x518 <GET_TEMPER>
			Izmeren = 0;
     a7c:	10 92 1e 02 	sts	0x021E, r1
		
		
	//	GET_GYRO();
		
	
		ACCEL_XANGLE = 57.29578*atan((float)-ACCEL_X/ sqrt(pow((float)ACCEL_Y,2)+pow((float)ACCEL_Z,2)))*10;
     a80:	40 90 42 02 	lds	r4, 0x0242
     a84:	50 90 43 02 	lds	r5, 0x0243
     a88:	60 90 44 02 	lds	r6, 0x0244
     a8c:	70 90 45 02 	lds	r7, 0x0245
     a90:	80 91 17 02 	lds	r24, 0x0217
     a94:	90 91 18 02 	lds	r25, 0x0218
     a98:	a0 91 19 02 	lds	r26, 0x0219
     a9c:	b0 91 1a 02 	lds	r27, 0x021A
     aa0:	89 83       	std	Y+1, r24	; 0x01
     aa2:	9a 83       	std	Y+2, r25	; 0x02
     aa4:	ab 83       	std	Y+3, r26	; 0x03
     aa6:	bc 83       	std	Y+4, r27	; 0x04
     aa8:	bc 01       	movw	r22, r24
     aaa:	cd 01       	movw	r24, r26
     aac:	e5 d1       	rcall	.+970    	; 0xe78 <__floatsisf>
     aae:	9b 01       	movw	r18, r22
     ab0:	ac 01       	movw	r20, r24
     ab2:	9a d2       	rcall	.+1332   	; 0xfe8 <__mulsf3>
     ab4:	6b 01       	movw	r12, r22
     ab6:	7c 01       	movw	r14, r24
     ab8:	80 91 29 02 	lds	r24, 0x0229
     abc:	90 91 2a 02 	lds	r25, 0x022A
     ac0:	a0 91 2b 02 	lds	r26, 0x022B
     ac4:	b0 91 2c 02 	lds	r27, 0x022C
     ac8:	8d 83       	std	Y+5, r24	; 0x05
     aca:	9e 83       	std	Y+6, r25	; 0x06
     acc:	af 83       	std	Y+7, r26	; 0x07
     ace:	b8 87       	std	Y+8, r27	; 0x08
     ad0:	bc 01       	movw	r22, r24
     ad2:	cd 01       	movw	r24, r26
     ad4:	d1 d1       	rcall	.+930    	; 0xe78 <__floatsisf>
     ad6:	9b 01       	movw	r18, r22
     ad8:	ac 01       	movw	r20, r24
     ada:	86 d2       	rcall	.+1292   	; 0xfe8 <__mulsf3>
     adc:	4b 01       	movw	r8, r22
     ade:	5c 01       	movw	r10, r24
     ae0:	9b 01       	movw	r18, r22
     ae2:	ac 01       	movw	r20, r24
     ae4:	c7 01       	movw	r24, r14
     ae6:	b6 01       	movw	r22, r12
     ae8:	a0 d0       	rcall	.+320    	; 0xc2a <__addsf3>
     aea:	e5 d2       	rcall	.+1482   	; 0x10b6 <sqrt>
     aec:	69 87       	std	Y+9, r22	; 0x09
     aee:	7a 87       	std	Y+10, r23	; 0x0a
     af0:	8b 87       	std	Y+11, r24	; 0x0b
     af2:	9c 87       	std	Y+12, r25	; 0x0c
     af4:	66 27       	eor	r22, r22
     af6:	77 27       	eor	r23, r23
     af8:	cb 01       	movw	r24, r22
     afa:	64 19       	sub	r22, r4
     afc:	75 09       	sbc	r23, r5
     afe:	86 09       	sbc	r24, r6
     b00:	97 09       	sbc	r25, r7
     b02:	ba d1       	rcall	.+884    	; 0xe78 <__floatsisf>
     b04:	29 85       	ldd	r18, Y+9	; 0x09
     b06:	3a 85       	ldd	r19, Y+10	; 0x0a
     b08:	4b 85       	ldd	r20, Y+11	; 0x0b
     b0a:	5c 85       	ldd	r21, Y+12	; 0x0c
     b0c:	1a d1       	rcall	.+564    	; 0xd42 <__divsf3>
     b0e:	f1 d0       	rcall	.+482    	; 0xcf2 <atan>
     b10:	21 ee       	ldi	r18, 0xE1	; 225
     b12:	3e e2       	ldi	r19, 0x2E	; 46
     b14:	45 e6       	ldi	r20, 0x65	; 101
     b16:	52 e4       	ldi	r21, 0x42	; 66
     b18:	67 d2       	rcall	.+1230   	; 0xfe8 <__mulsf3>
     b1a:	20 e0       	ldi	r18, 0x00	; 0
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	40 e2       	ldi	r20, 0x20	; 32
     b20:	51 e4       	ldi	r21, 0x41	; 65
     b22:	62 d2       	rcall	.+1220   	; 0xfe8 <__mulsf3>
     b24:	76 d1       	rcall	.+748    	; 0xe12 <__fixsfsi>
     b26:	60 93 5c 02 	sts	0x025C, r22
     b2a:	70 93 5d 02 	sts	0x025D, r23
     b2e:	80 93 5e 02 	sts	0x025E, r24
     b32:	90 93 5f 02 	sts	0x025F, r25
		ACCEL_YANGLE = 57.29578*atan((float)-ACCEL_Y/ sqrt(pow((float)ACCEL_X,2)+pow((float)ACCEL_Z,2)))*10;
     b36:	c3 01       	movw	r24, r6
     b38:	b2 01       	movw	r22, r4
     b3a:	9e d1       	rcall	.+828    	; 0xe78 <__floatsisf>
     b3c:	9b 01       	movw	r18, r22
     b3e:	ac 01       	movw	r20, r24
     b40:	53 d2       	rcall	.+1190   	; 0xfe8 <__mulsf3>
     b42:	2b 01       	movw	r4, r22
     b44:	3c 01       	movw	r6, r24
     b46:	9b 01       	movw	r18, r22
     b48:	ac 01       	movw	r20, r24
     b4a:	c5 01       	movw	r24, r10
     b4c:	b4 01       	movw	r22, r8
     b4e:	6d d0       	rcall	.+218    	; 0xc2a <__addsf3>
     b50:	b2 d2       	rcall	.+1380   	; 0x10b6 <sqrt>
     b52:	4b 01       	movw	r8, r22
     b54:	5c 01       	movw	r10, r24
     b56:	69 81       	ldd	r22, Y+1	; 0x01
     b58:	7a 81       	ldd	r23, Y+2	; 0x02
     b5a:	8b 81       	ldd	r24, Y+3	; 0x03
     b5c:	9c 81       	ldd	r25, Y+4	; 0x04
     b5e:	90 95       	com	r25
     b60:	80 95       	com	r24
     b62:	70 95       	com	r23
     b64:	61 95       	neg	r22
     b66:	7f 4f       	sbci	r23, 0xFF	; 255
     b68:	8f 4f       	sbci	r24, 0xFF	; 255
     b6a:	9f 4f       	sbci	r25, 0xFF	; 255
     b6c:	85 d1       	rcall	.+778    	; 0xe78 <__floatsisf>
     b6e:	a5 01       	movw	r20, r10
     b70:	94 01       	movw	r18, r8
     b72:	e7 d0       	rcall	.+462    	; 0xd42 <__divsf3>
     b74:	be d0       	rcall	.+380    	; 0xcf2 <atan>
     b76:	21 ee       	ldi	r18, 0xE1	; 225
     b78:	3e e2       	ldi	r19, 0x2E	; 46
     b7a:	45 e6       	ldi	r20, 0x65	; 101
     b7c:	52 e4       	ldi	r21, 0x42	; 66
     b7e:	34 d2       	rcall	.+1128   	; 0xfe8 <__mulsf3>
     b80:	20 e0       	ldi	r18, 0x00	; 0
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	40 e2       	ldi	r20, 0x20	; 32
     b86:	51 e4       	ldi	r21, 0x41	; 65
     b88:	2f d2       	rcall	.+1118   	; 0xfe8 <__mulsf3>
     b8a:	43 d1       	rcall	.+646    	; 0xe12 <__fixsfsi>
     b8c:	60 93 25 02 	sts	0x0225, r22
     b90:	70 93 26 02 	sts	0x0226, r23
     b94:	80 93 27 02 	sts	0x0227, r24
     b98:	90 93 28 02 	sts	0x0228, r25
		ACCEL_ZANGLE = 57.29578*atan((float)-ACCEL_Z/ sqrt(pow((float)ACCEL_X,2)+pow((float)ACCEL_Y,2)))*10;
     b9c:	a3 01       	movw	r20, r6
     b9e:	92 01       	movw	r18, r4
     ba0:	c7 01       	movw	r24, r14
     ba2:	b6 01       	movw	r22, r12
     ba4:	42 d0       	rcall	.+132    	; 0xc2a <__addsf3>
     ba6:	87 d2       	rcall	.+1294   	; 0x10b6 <sqrt>
     ba8:	6b 01       	movw	r12, r22
     baa:	7c 01       	movw	r14, r24
     bac:	6d 81       	ldd	r22, Y+5	; 0x05
     bae:	7e 81       	ldd	r23, Y+6	; 0x06
     bb0:	8f 81       	ldd	r24, Y+7	; 0x07
     bb2:	98 85       	ldd	r25, Y+8	; 0x08
     bb4:	90 95       	com	r25
     bb6:	80 95       	com	r24
     bb8:	70 95       	com	r23
     bba:	61 95       	neg	r22
     bbc:	7f 4f       	sbci	r23, 0xFF	; 255
     bbe:	8f 4f       	sbci	r24, 0xFF	; 255
     bc0:	9f 4f       	sbci	r25, 0xFF	; 255
     bc2:	5a d1       	rcall	.+692    	; 0xe78 <__floatsisf>
     bc4:	a7 01       	movw	r20, r14
     bc6:	96 01       	movw	r18, r12
     bc8:	bc d0       	rcall	.+376    	; 0xd42 <__divsf3>
     bca:	93 d0       	rcall	.+294    	; 0xcf2 <atan>
     bcc:	21 ee       	ldi	r18, 0xE1	; 225
     bce:	3e e2       	ldi	r19, 0x2E	; 46
     bd0:	45 e6       	ldi	r20, 0x65	; 101
     bd2:	52 e4       	ldi	r21, 0x42	; 66
     bd4:	09 d2       	rcall	.+1042   	; 0xfe8 <__mulsf3>
     bd6:	20 e0       	ldi	r18, 0x00	; 0
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	40 e2       	ldi	r20, 0x20	; 32
     bdc:	51 e4       	ldi	r21, 0x41	; 65
     bde:	04 d2       	rcall	.+1032   	; 0xfe8 <__mulsf3>
     be0:	18 d1       	rcall	.+560    	; 0xe12 <__fixsfsi>
     be2:	60 93 36 02 	sts	0x0236, r22
     be6:	70 93 37 02 	sts	0x0237, r23
     bea:	80 93 38 02 	sts	0x0238, r24
     bee:	90 93 39 02 	sts	0x0239, r25
		//if(ACCEL_ZANGLE<0){  ACCEL_ZANGLE=-(ACCEL_ZANGLE);} 
			
		
		/*	*/	
		
		 if (Priem == 1)
     bf2:	80 91 05 02 	lds	r24, 0x0205
     bf6:	90 91 06 02 	lds	r25, 0x0206
     bfa:	01 97       	sbiw	r24, 0x01	; 1
     bfc:	09 f0       	breq	.+2      	; 0xc00 <main+0x284>
     bfe:	07 cf       	rjmp	.-498    	; 0xa0e <main+0x92>
		 {
			  
			 Priem = 0;
     c00:	10 92 06 02 	sts	0x0206, r1
     c04:	10 92 05 02 	sts	0x0205, r1
			 if (glavmas[0] == 'R')  // проверяем первый символ
     c08:	d8 01       	movw	r26, r16
     c0a:	8c 91       	ld	r24, X
     c0c:	82 35       	cpi	r24, 0x52	; 82
     c0e:	11 f4       	brne	.+4      	; 0xc14 <main+0x298>
			 {
				 CommandR();    // Группа команд чтения данных
     c10:	9c de       	rcall	.-712    	; 0x94a <CommandR>
     c12:	fd ce       	rjmp	.-518    	; 0xa0e <main+0x92>
				 
			 }
			 else if  (glavmas[0] == 'W') // проверяем первый символ
     c14:	87 35       	cpi	r24, 0x57	; 87
     c16:	09 f4       	brne	.+2      	; 0xc1a <main+0x29e>
     c18:	fa ce       	rjmp	.-524    	; 0xa0e <main+0x92>
			 {
				 CommandW(); // Группа команд записи данных
			 }
			 else
			 {
				 UART1_Transmit (Vp);
     c1a:	8f e3       	ldi	r24, 0x3F	; 63
     c1c:	60 da       	rcall	.-2880   	; 0xde <UART1_Transmit>
				 Priem = 0;
     c1e:	10 92 06 02 	sts	0x0206, r1
     c22:	10 92 05 02 	sts	0x0205, r1
     c26:	f3 ce       	rjmp	.-538    	; 0xa0e <main+0x92>

00000c28 <__subsf3>:
     c28:	50 58       	subi	r21, 0x80	; 128

00000c2a <__addsf3>:
     c2a:	bb 27       	eor	r27, r27
     c2c:	aa 27       	eor	r26, r26
     c2e:	0e d0       	rcall	.+28     	; 0xc4c <__addsf3x>
     c30:	9a c1       	rjmp	.+820    	; 0xf66 <__fp_round>
     c32:	8b d1       	rcall	.+790    	; 0xf4a <__fp_pscA>
     c34:	30 f0       	brcs	.+12     	; 0xc42 <__addsf3+0x18>
     c36:	90 d1       	rcall	.+800    	; 0xf58 <__fp_pscB>
     c38:	20 f0       	brcs	.+8      	; 0xc42 <__addsf3+0x18>
     c3a:	31 f4       	brne	.+12     	; 0xc48 <__addsf3+0x1e>
     c3c:	9f 3f       	cpi	r25, 0xFF	; 255
     c3e:	11 f4       	brne	.+4      	; 0xc44 <__addsf3+0x1a>
     c40:	1e f4       	brtc	.+6      	; 0xc48 <__addsf3+0x1e>
     c42:	5b c1       	rjmp	.+694    	; 0xefa <__fp_nan>
     c44:	0e f4       	brtc	.+2      	; 0xc48 <__addsf3+0x1e>
     c46:	e0 95       	com	r30
     c48:	e7 fb       	bst	r30, 7
     c4a:	51 c1       	rjmp	.+674    	; 0xeee <__fp_inf>

00000c4c <__addsf3x>:
     c4c:	e9 2f       	mov	r30, r25
     c4e:	9c d1       	rcall	.+824    	; 0xf88 <__fp_split3>
     c50:	80 f3       	brcs	.-32     	; 0xc32 <__addsf3+0x8>
     c52:	ba 17       	cp	r27, r26
     c54:	62 07       	cpc	r22, r18
     c56:	73 07       	cpc	r23, r19
     c58:	84 07       	cpc	r24, r20
     c5a:	95 07       	cpc	r25, r21
     c5c:	18 f0       	brcs	.+6      	; 0xc64 <__addsf3x+0x18>
     c5e:	71 f4       	brne	.+28     	; 0xc7c <__addsf3x+0x30>
     c60:	9e f5       	brtc	.+102    	; 0xcc8 <__addsf3x+0x7c>
     c62:	b4 c1       	rjmp	.+872    	; 0xfcc <__fp_zero>
     c64:	0e f4       	brtc	.+2      	; 0xc68 <__addsf3x+0x1c>
     c66:	e0 95       	com	r30
     c68:	0b 2e       	mov	r0, r27
     c6a:	ba 2f       	mov	r27, r26
     c6c:	a0 2d       	mov	r26, r0
     c6e:	0b 01       	movw	r0, r22
     c70:	b9 01       	movw	r22, r18
     c72:	90 01       	movw	r18, r0
     c74:	0c 01       	movw	r0, r24
     c76:	ca 01       	movw	r24, r20
     c78:	a0 01       	movw	r20, r0
     c7a:	11 24       	eor	r1, r1
     c7c:	ff 27       	eor	r31, r31
     c7e:	59 1b       	sub	r21, r25
     c80:	99 f0       	breq	.+38     	; 0xca8 <__addsf3x+0x5c>
     c82:	59 3f       	cpi	r21, 0xF9	; 249
     c84:	50 f4       	brcc	.+20     	; 0xc9a <__addsf3x+0x4e>
     c86:	50 3e       	cpi	r21, 0xE0	; 224
     c88:	68 f1       	brcs	.+90     	; 0xce4 <__addsf3x+0x98>
     c8a:	1a 16       	cp	r1, r26
     c8c:	f0 40       	sbci	r31, 0x00	; 0
     c8e:	a2 2f       	mov	r26, r18
     c90:	23 2f       	mov	r18, r19
     c92:	34 2f       	mov	r19, r20
     c94:	44 27       	eor	r20, r20
     c96:	58 5f       	subi	r21, 0xF8	; 248
     c98:	f3 cf       	rjmp	.-26     	; 0xc80 <__addsf3x+0x34>
     c9a:	46 95       	lsr	r20
     c9c:	37 95       	ror	r19
     c9e:	27 95       	ror	r18
     ca0:	a7 95       	ror	r26
     ca2:	f0 40       	sbci	r31, 0x00	; 0
     ca4:	53 95       	inc	r21
     ca6:	c9 f7       	brne	.-14     	; 0xc9a <__addsf3x+0x4e>
     ca8:	7e f4       	brtc	.+30     	; 0xcc8 <__addsf3x+0x7c>
     caa:	1f 16       	cp	r1, r31
     cac:	ba 0b       	sbc	r27, r26
     cae:	62 0b       	sbc	r22, r18
     cb0:	73 0b       	sbc	r23, r19
     cb2:	84 0b       	sbc	r24, r20
     cb4:	ba f0       	brmi	.+46     	; 0xce4 <__addsf3x+0x98>
     cb6:	91 50       	subi	r25, 0x01	; 1
     cb8:	a1 f0       	breq	.+40     	; 0xce2 <__addsf3x+0x96>
     cba:	ff 0f       	add	r31, r31
     cbc:	bb 1f       	adc	r27, r27
     cbe:	66 1f       	adc	r22, r22
     cc0:	77 1f       	adc	r23, r23
     cc2:	88 1f       	adc	r24, r24
     cc4:	c2 f7       	brpl	.-16     	; 0xcb6 <__addsf3x+0x6a>
     cc6:	0e c0       	rjmp	.+28     	; 0xce4 <__addsf3x+0x98>
     cc8:	ba 0f       	add	r27, r26
     cca:	62 1f       	adc	r22, r18
     ccc:	73 1f       	adc	r23, r19
     cce:	84 1f       	adc	r24, r20
     cd0:	48 f4       	brcc	.+18     	; 0xce4 <__addsf3x+0x98>
     cd2:	87 95       	ror	r24
     cd4:	77 95       	ror	r23
     cd6:	67 95       	ror	r22
     cd8:	b7 95       	ror	r27
     cda:	f7 95       	ror	r31
     cdc:	9e 3f       	cpi	r25, 0xFE	; 254
     cde:	08 f0       	brcs	.+2      	; 0xce2 <__addsf3x+0x96>
     ce0:	b3 cf       	rjmp	.-154    	; 0xc48 <__addsf3+0x1e>
     ce2:	93 95       	inc	r25
     ce4:	88 0f       	add	r24, r24
     ce6:	08 f0       	brcs	.+2      	; 0xcea <__addsf3x+0x9e>
     ce8:	99 27       	eor	r25, r25
     cea:	ee 0f       	add	r30, r30
     cec:	97 95       	ror	r25
     cee:	87 95       	ror	r24
     cf0:	08 95       	ret

00000cf2 <atan>:
     cf2:	df 93       	push	r29
     cf4:	dd 27       	eor	r29, r29
     cf6:	b9 2f       	mov	r27, r25
     cf8:	bf 77       	andi	r27, 0x7F	; 127
     cfa:	40 e8       	ldi	r20, 0x80	; 128
     cfc:	5f e3       	ldi	r21, 0x3F	; 63
     cfe:	16 16       	cp	r1, r22
     d00:	17 06       	cpc	r1, r23
     d02:	48 07       	cpc	r20, r24
     d04:	5b 07       	cpc	r21, r27
     d06:	10 f4       	brcc	.+4      	; 0xd0c <atan+0x1a>
     d08:	d9 2f       	mov	r29, r25
     d0a:	67 d1       	rcall	.+718    	; 0xfda <inverse>
     d0c:	9f 93       	push	r25
     d0e:	8f 93       	push	r24
     d10:	7f 93       	push	r23
     d12:	6f 93       	push	r22
     d14:	0e d2       	rcall	.+1052   	; 0x1132 <square>
     d16:	ec e8       	ldi	r30, 0x8C	; 140
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	f2 d0       	rcall	.+484    	; 0xf00 <__fp_powser>
     d1c:	24 d1       	rcall	.+584    	; 0xf66 <__fp_round>
     d1e:	2f 91       	pop	r18
     d20:	3f 91       	pop	r19
     d22:	4f 91       	pop	r20
     d24:	5f 91       	pop	r21
     d26:	6c d1       	rcall	.+728    	; 0x1000 <__mulsf3x>
     d28:	dd 23       	and	r29, r29
     d2a:	49 f0       	breq	.+18     	; 0xd3e <atan+0x4c>
     d2c:	90 58       	subi	r25, 0x80	; 128
     d2e:	a2 ea       	ldi	r26, 0xA2	; 162
     d30:	2a ed       	ldi	r18, 0xDA	; 218
     d32:	3f e0       	ldi	r19, 0x0F	; 15
     d34:	49 ec       	ldi	r20, 0xC9	; 201
     d36:	5f e3       	ldi	r21, 0x3F	; 63
     d38:	d0 78       	andi	r29, 0x80	; 128
     d3a:	5d 27       	eor	r21, r29
     d3c:	87 df       	rcall	.-242    	; 0xc4c <__addsf3x>
     d3e:	df 91       	pop	r29
     d40:	12 c1       	rjmp	.+548    	; 0xf66 <__fp_round>

00000d42 <__divsf3>:
     d42:	0c d0       	rcall	.+24     	; 0xd5c <__divsf3x>
     d44:	10 c1       	rjmp	.+544    	; 0xf66 <__fp_round>
     d46:	08 d1       	rcall	.+528    	; 0xf58 <__fp_pscB>
     d48:	40 f0       	brcs	.+16     	; 0xd5a <__divsf3+0x18>
     d4a:	ff d0       	rcall	.+510    	; 0xf4a <__fp_pscA>
     d4c:	30 f0       	brcs	.+12     	; 0xd5a <__divsf3+0x18>
     d4e:	21 f4       	brne	.+8      	; 0xd58 <__divsf3+0x16>
     d50:	5f 3f       	cpi	r21, 0xFF	; 255
     d52:	19 f0       	breq	.+6      	; 0xd5a <__divsf3+0x18>
     d54:	cc c0       	rjmp	.+408    	; 0xeee <__fp_inf>
     d56:	51 11       	cpse	r21, r1
     d58:	3a c1       	rjmp	.+628    	; 0xfce <__fp_szero>
     d5a:	cf c0       	rjmp	.+414    	; 0xefa <__fp_nan>

00000d5c <__divsf3x>:
     d5c:	15 d1       	rcall	.+554    	; 0xf88 <__fp_split3>
     d5e:	98 f3       	brcs	.-26     	; 0xd46 <__divsf3+0x4>

00000d60 <__divsf3_pse>:
     d60:	99 23       	and	r25, r25
     d62:	c9 f3       	breq	.-14     	; 0xd56 <__divsf3+0x14>
     d64:	55 23       	and	r21, r21
     d66:	b1 f3       	breq	.-20     	; 0xd54 <__divsf3+0x12>
     d68:	95 1b       	sub	r25, r21
     d6a:	55 0b       	sbc	r21, r21
     d6c:	bb 27       	eor	r27, r27
     d6e:	aa 27       	eor	r26, r26
     d70:	62 17       	cp	r22, r18
     d72:	73 07       	cpc	r23, r19
     d74:	84 07       	cpc	r24, r20
     d76:	38 f0       	brcs	.+14     	; 0xd86 <__divsf3_pse+0x26>
     d78:	9f 5f       	subi	r25, 0xFF	; 255
     d7a:	5f 4f       	sbci	r21, 0xFF	; 255
     d7c:	22 0f       	add	r18, r18
     d7e:	33 1f       	adc	r19, r19
     d80:	44 1f       	adc	r20, r20
     d82:	aa 1f       	adc	r26, r26
     d84:	a9 f3       	breq	.-22     	; 0xd70 <__divsf3_pse+0x10>
     d86:	33 d0       	rcall	.+102    	; 0xdee <__divsf3_pse+0x8e>
     d88:	0e 2e       	mov	r0, r30
     d8a:	3a f0       	brmi	.+14     	; 0xd9a <__divsf3_pse+0x3a>
     d8c:	e0 e8       	ldi	r30, 0x80	; 128
     d8e:	30 d0       	rcall	.+96     	; 0xdf0 <__divsf3_pse+0x90>
     d90:	91 50       	subi	r25, 0x01	; 1
     d92:	50 40       	sbci	r21, 0x00	; 0
     d94:	e6 95       	lsr	r30
     d96:	00 1c       	adc	r0, r0
     d98:	ca f7       	brpl	.-14     	; 0xd8c <__divsf3_pse+0x2c>
     d9a:	29 d0       	rcall	.+82     	; 0xdee <__divsf3_pse+0x8e>
     d9c:	fe 2f       	mov	r31, r30
     d9e:	27 d0       	rcall	.+78     	; 0xdee <__divsf3_pse+0x8e>
     da0:	66 0f       	add	r22, r22
     da2:	77 1f       	adc	r23, r23
     da4:	88 1f       	adc	r24, r24
     da6:	bb 1f       	adc	r27, r27
     da8:	26 17       	cp	r18, r22
     daa:	37 07       	cpc	r19, r23
     dac:	48 07       	cpc	r20, r24
     dae:	ab 07       	cpc	r26, r27
     db0:	b0 e8       	ldi	r27, 0x80	; 128
     db2:	09 f0       	breq	.+2      	; 0xdb6 <__divsf3_pse+0x56>
     db4:	bb 0b       	sbc	r27, r27
     db6:	80 2d       	mov	r24, r0
     db8:	bf 01       	movw	r22, r30
     dba:	ff 27       	eor	r31, r31
     dbc:	93 58       	subi	r25, 0x83	; 131
     dbe:	5f 4f       	sbci	r21, 0xFF	; 255
     dc0:	2a f0       	brmi	.+10     	; 0xdcc <__divsf3_pse+0x6c>
     dc2:	9e 3f       	cpi	r25, 0xFE	; 254
     dc4:	51 05       	cpc	r21, r1
     dc6:	68 f0       	brcs	.+26     	; 0xde2 <__divsf3_pse+0x82>
     dc8:	92 c0       	rjmp	.+292    	; 0xeee <__fp_inf>
     dca:	01 c1       	rjmp	.+514    	; 0xfce <__fp_szero>
     dcc:	5f 3f       	cpi	r21, 0xFF	; 255
     dce:	ec f3       	brlt	.-6      	; 0xdca <__divsf3_pse+0x6a>
     dd0:	98 3e       	cpi	r25, 0xE8	; 232
     dd2:	dc f3       	brlt	.-10     	; 0xdca <__divsf3_pse+0x6a>
     dd4:	86 95       	lsr	r24
     dd6:	77 95       	ror	r23
     dd8:	67 95       	ror	r22
     dda:	b7 95       	ror	r27
     ddc:	f7 95       	ror	r31
     dde:	9f 5f       	subi	r25, 0xFF	; 255
     de0:	c9 f7       	brne	.-14     	; 0xdd4 <__divsf3_pse+0x74>
     de2:	88 0f       	add	r24, r24
     de4:	91 1d       	adc	r25, r1
     de6:	96 95       	lsr	r25
     de8:	87 95       	ror	r24
     dea:	97 f9       	bld	r25, 7
     dec:	08 95       	ret
     dee:	e1 e0       	ldi	r30, 0x01	; 1
     df0:	66 0f       	add	r22, r22
     df2:	77 1f       	adc	r23, r23
     df4:	88 1f       	adc	r24, r24
     df6:	bb 1f       	adc	r27, r27
     df8:	62 17       	cp	r22, r18
     dfa:	73 07       	cpc	r23, r19
     dfc:	84 07       	cpc	r24, r20
     dfe:	ba 07       	cpc	r27, r26
     e00:	20 f0       	brcs	.+8      	; 0xe0a <__divsf3_pse+0xaa>
     e02:	62 1b       	sub	r22, r18
     e04:	73 0b       	sbc	r23, r19
     e06:	84 0b       	sbc	r24, r20
     e08:	ba 0b       	sbc	r27, r26
     e0a:	ee 1f       	adc	r30, r30
     e0c:	88 f7       	brcc	.-30     	; 0xdf0 <__divsf3_pse+0x90>
     e0e:	e0 95       	com	r30
     e10:	08 95       	ret

00000e12 <__fixsfsi>:
     e12:	04 d0       	rcall	.+8      	; 0xe1c <__fixunssfsi>
     e14:	68 94       	set
     e16:	b1 11       	cpse	r27, r1
     e18:	da c0       	rjmp	.+436    	; 0xfce <__fp_szero>
     e1a:	08 95       	ret

00000e1c <__fixunssfsi>:
     e1c:	bd d0       	rcall	.+378    	; 0xf98 <__fp_splitA>
     e1e:	88 f0       	brcs	.+34     	; 0xe42 <__fixunssfsi+0x26>
     e20:	9f 57       	subi	r25, 0x7F	; 127
     e22:	90 f0       	brcs	.+36     	; 0xe48 <__fixunssfsi+0x2c>
     e24:	b9 2f       	mov	r27, r25
     e26:	99 27       	eor	r25, r25
     e28:	b7 51       	subi	r27, 0x17	; 23
     e2a:	a0 f0       	brcs	.+40     	; 0xe54 <__fixunssfsi+0x38>
     e2c:	d1 f0       	breq	.+52     	; 0xe62 <__fixunssfsi+0x46>
     e2e:	66 0f       	add	r22, r22
     e30:	77 1f       	adc	r23, r23
     e32:	88 1f       	adc	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	1a f0       	brmi	.+6      	; 0xe3e <__fixunssfsi+0x22>
     e38:	ba 95       	dec	r27
     e3a:	c9 f7       	brne	.-14     	; 0xe2e <__fixunssfsi+0x12>
     e3c:	12 c0       	rjmp	.+36     	; 0xe62 <__fixunssfsi+0x46>
     e3e:	b1 30       	cpi	r27, 0x01	; 1
     e40:	81 f0       	breq	.+32     	; 0xe62 <__fixunssfsi+0x46>
     e42:	c4 d0       	rcall	.+392    	; 0xfcc <__fp_zero>
     e44:	b1 e0       	ldi	r27, 0x01	; 1
     e46:	08 95       	ret
     e48:	c1 c0       	rjmp	.+386    	; 0xfcc <__fp_zero>
     e4a:	67 2f       	mov	r22, r23
     e4c:	78 2f       	mov	r23, r24
     e4e:	88 27       	eor	r24, r24
     e50:	b8 5f       	subi	r27, 0xF8	; 248
     e52:	39 f0       	breq	.+14     	; 0xe62 <__fixunssfsi+0x46>
     e54:	b9 3f       	cpi	r27, 0xF9	; 249
     e56:	cc f3       	brlt	.-14     	; 0xe4a <__fixunssfsi+0x2e>
     e58:	86 95       	lsr	r24
     e5a:	77 95       	ror	r23
     e5c:	67 95       	ror	r22
     e5e:	b3 95       	inc	r27
     e60:	d9 f7       	brne	.-10     	; 0xe58 <__fixunssfsi+0x3c>
     e62:	3e f4       	brtc	.+14     	; 0xe72 <__fixunssfsi+0x56>
     e64:	90 95       	com	r25
     e66:	80 95       	com	r24
     e68:	70 95       	com	r23
     e6a:	61 95       	neg	r22
     e6c:	7f 4f       	sbci	r23, 0xFF	; 255
     e6e:	8f 4f       	sbci	r24, 0xFF	; 255
     e70:	9f 4f       	sbci	r25, 0xFF	; 255
     e72:	08 95       	ret

00000e74 <__floatunsisf>:
     e74:	e8 94       	clt
     e76:	09 c0       	rjmp	.+18     	; 0xe8a <__floatsisf+0x12>

00000e78 <__floatsisf>:
     e78:	97 fb       	bst	r25, 7
     e7a:	3e f4       	brtc	.+14     	; 0xe8a <__floatsisf+0x12>
     e7c:	90 95       	com	r25
     e7e:	80 95       	com	r24
     e80:	70 95       	com	r23
     e82:	61 95       	neg	r22
     e84:	7f 4f       	sbci	r23, 0xFF	; 255
     e86:	8f 4f       	sbci	r24, 0xFF	; 255
     e88:	9f 4f       	sbci	r25, 0xFF	; 255
     e8a:	99 23       	and	r25, r25
     e8c:	a9 f0       	breq	.+42     	; 0xeb8 <__floatsisf+0x40>
     e8e:	f9 2f       	mov	r31, r25
     e90:	96 e9       	ldi	r25, 0x96	; 150
     e92:	bb 27       	eor	r27, r27
     e94:	93 95       	inc	r25
     e96:	f6 95       	lsr	r31
     e98:	87 95       	ror	r24
     e9a:	77 95       	ror	r23
     e9c:	67 95       	ror	r22
     e9e:	b7 95       	ror	r27
     ea0:	f1 11       	cpse	r31, r1
     ea2:	f8 cf       	rjmp	.-16     	; 0xe94 <__floatsisf+0x1c>
     ea4:	fa f4       	brpl	.+62     	; 0xee4 <__floatsisf+0x6c>
     ea6:	bb 0f       	add	r27, r27
     ea8:	11 f4       	brne	.+4      	; 0xeae <__floatsisf+0x36>
     eaa:	60 ff       	sbrs	r22, 0
     eac:	1b c0       	rjmp	.+54     	; 0xee4 <__floatsisf+0x6c>
     eae:	6f 5f       	subi	r22, 0xFF	; 255
     eb0:	7f 4f       	sbci	r23, 0xFF	; 255
     eb2:	8f 4f       	sbci	r24, 0xFF	; 255
     eb4:	9f 4f       	sbci	r25, 0xFF	; 255
     eb6:	16 c0       	rjmp	.+44     	; 0xee4 <__floatsisf+0x6c>
     eb8:	88 23       	and	r24, r24
     eba:	11 f0       	breq	.+4      	; 0xec0 <__floatsisf+0x48>
     ebc:	96 e9       	ldi	r25, 0x96	; 150
     ebe:	11 c0       	rjmp	.+34     	; 0xee2 <__floatsisf+0x6a>
     ec0:	77 23       	and	r23, r23
     ec2:	21 f0       	breq	.+8      	; 0xecc <__floatsisf+0x54>
     ec4:	9e e8       	ldi	r25, 0x8E	; 142
     ec6:	87 2f       	mov	r24, r23
     ec8:	76 2f       	mov	r23, r22
     eca:	05 c0       	rjmp	.+10     	; 0xed6 <__floatsisf+0x5e>
     ecc:	66 23       	and	r22, r22
     ece:	71 f0       	breq	.+28     	; 0xeec <__floatsisf+0x74>
     ed0:	96 e8       	ldi	r25, 0x86	; 134
     ed2:	86 2f       	mov	r24, r22
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	60 e0       	ldi	r22, 0x00	; 0
     ed8:	2a f0       	brmi	.+10     	; 0xee4 <__floatsisf+0x6c>
     eda:	9a 95       	dec	r25
     edc:	66 0f       	add	r22, r22
     ede:	77 1f       	adc	r23, r23
     ee0:	88 1f       	adc	r24, r24
     ee2:	da f7       	brpl	.-10     	; 0xeda <__floatsisf+0x62>
     ee4:	88 0f       	add	r24, r24
     ee6:	96 95       	lsr	r25
     ee8:	87 95       	ror	r24
     eea:	97 f9       	bld	r25, 7
     eec:	08 95       	ret

00000eee <__fp_inf>:
     eee:	97 f9       	bld	r25, 7
     ef0:	9f 67       	ori	r25, 0x7F	; 127
     ef2:	80 e8       	ldi	r24, 0x80	; 128
     ef4:	70 e0       	ldi	r23, 0x00	; 0
     ef6:	60 e0       	ldi	r22, 0x00	; 0
     ef8:	08 95       	ret

00000efa <__fp_nan>:
     efa:	9f ef       	ldi	r25, 0xFF	; 255
     efc:	80 ec       	ldi	r24, 0xC0	; 192
     efe:	08 95       	ret

00000f00 <__fp_powser>:
     f00:	df 93       	push	r29
     f02:	cf 93       	push	r28
     f04:	1f 93       	push	r17
     f06:	0f 93       	push	r16
     f08:	ff 92       	push	r15
     f0a:	ef 92       	push	r14
     f0c:	df 92       	push	r13
     f0e:	7b 01       	movw	r14, r22
     f10:	8c 01       	movw	r16, r24
     f12:	68 94       	set
     f14:	05 c0       	rjmp	.+10     	; 0xf20 <__fp_powser+0x20>
     f16:	da 2e       	mov	r13, r26
     f18:	ef 01       	movw	r28, r30
     f1a:	72 d0       	rcall	.+228    	; 0x1000 <__mulsf3x>
     f1c:	fe 01       	movw	r30, r28
     f1e:	e8 94       	clt
     f20:	a5 91       	lpm	r26, Z+
     f22:	25 91       	lpm	r18, Z+
     f24:	35 91       	lpm	r19, Z+
     f26:	45 91       	lpm	r20, Z+
     f28:	55 91       	lpm	r21, Z+
     f2a:	ae f3       	brts	.-22     	; 0xf16 <__fp_powser+0x16>
     f2c:	ef 01       	movw	r28, r30
     f2e:	8e de       	rcall	.-740    	; 0xc4c <__addsf3x>
     f30:	fe 01       	movw	r30, r28
     f32:	97 01       	movw	r18, r14
     f34:	a8 01       	movw	r20, r16
     f36:	da 94       	dec	r13
     f38:	79 f7       	brne	.-34     	; 0xf18 <__fp_powser+0x18>
     f3a:	df 90       	pop	r13
     f3c:	ef 90       	pop	r14
     f3e:	ff 90       	pop	r15
     f40:	0f 91       	pop	r16
     f42:	1f 91       	pop	r17
     f44:	cf 91       	pop	r28
     f46:	df 91       	pop	r29
     f48:	08 95       	ret

00000f4a <__fp_pscA>:
     f4a:	00 24       	eor	r0, r0
     f4c:	0a 94       	dec	r0
     f4e:	16 16       	cp	r1, r22
     f50:	17 06       	cpc	r1, r23
     f52:	18 06       	cpc	r1, r24
     f54:	09 06       	cpc	r0, r25
     f56:	08 95       	ret

00000f58 <__fp_pscB>:
     f58:	00 24       	eor	r0, r0
     f5a:	0a 94       	dec	r0
     f5c:	12 16       	cp	r1, r18
     f5e:	13 06       	cpc	r1, r19
     f60:	14 06       	cpc	r1, r20
     f62:	05 06       	cpc	r0, r21
     f64:	08 95       	ret

00000f66 <__fp_round>:
     f66:	09 2e       	mov	r0, r25
     f68:	03 94       	inc	r0
     f6a:	00 0c       	add	r0, r0
     f6c:	11 f4       	brne	.+4      	; 0xf72 <__fp_round+0xc>
     f6e:	88 23       	and	r24, r24
     f70:	52 f0       	brmi	.+20     	; 0xf86 <__fp_round+0x20>
     f72:	bb 0f       	add	r27, r27
     f74:	40 f4       	brcc	.+16     	; 0xf86 <__fp_round+0x20>
     f76:	bf 2b       	or	r27, r31
     f78:	11 f4       	brne	.+4      	; 0xf7e <__fp_round+0x18>
     f7a:	60 ff       	sbrs	r22, 0
     f7c:	04 c0       	rjmp	.+8      	; 0xf86 <__fp_round+0x20>
     f7e:	6f 5f       	subi	r22, 0xFF	; 255
     f80:	7f 4f       	sbci	r23, 0xFF	; 255
     f82:	8f 4f       	sbci	r24, 0xFF	; 255
     f84:	9f 4f       	sbci	r25, 0xFF	; 255
     f86:	08 95       	ret

00000f88 <__fp_split3>:
     f88:	57 fd       	sbrc	r21, 7
     f8a:	90 58       	subi	r25, 0x80	; 128
     f8c:	44 0f       	add	r20, r20
     f8e:	55 1f       	adc	r21, r21
     f90:	59 f0       	breq	.+22     	; 0xfa8 <__fp_splitA+0x10>
     f92:	5f 3f       	cpi	r21, 0xFF	; 255
     f94:	71 f0       	breq	.+28     	; 0xfb2 <__fp_splitA+0x1a>
     f96:	47 95       	ror	r20

00000f98 <__fp_splitA>:
     f98:	88 0f       	add	r24, r24
     f9a:	97 fb       	bst	r25, 7
     f9c:	99 1f       	adc	r25, r25
     f9e:	61 f0       	breq	.+24     	; 0xfb8 <__fp_splitA+0x20>
     fa0:	9f 3f       	cpi	r25, 0xFF	; 255
     fa2:	79 f0       	breq	.+30     	; 0xfc2 <__fp_splitA+0x2a>
     fa4:	87 95       	ror	r24
     fa6:	08 95       	ret
     fa8:	12 16       	cp	r1, r18
     faa:	13 06       	cpc	r1, r19
     fac:	14 06       	cpc	r1, r20
     fae:	55 1f       	adc	r21, r21
     fb0:	f2 cf       	rjmp	.-28     	; 0xf96 <__fp_split3+0xe>
     fb2:	46 95       	lsr	r20
     fb4:	f1 df       	rcall	.-30     	; 0xf98 <__fp_splitA>
     fb6:	08 c0       	rjmp	.+16     	; 0xfc8 <__fp_splitA+0x30>
     fb8:	16 16       	cp	r1, r22
     fba:	17 06       	cpc	r1, r23
     fbc:	18 06       	cpc	r1, r24
     fbe:	99 1f       	adc	r25, r25
     fc0:	f1 cf       	rjmp	.-30     	; 0xfa4 <__fp_splitA+0xc>
     fc2:	86 95       	lsr	r24
     fc4:	71 05       	cpc	r23, r1
     fc6:	61 05       	cpc	r22, r1
     fc8:	08 94       	sec
     fca:	08 95       	ret

00000fcc <__fp_zero>:
     fcc:	e8 94       	clt

00000fce <__fp_szero>:
     fce:	bb 27       	eor	r27, r27
     fd0:	66 27       	eor	r22, r22
     fd2:	77 27       	eor	r23, r23
     fd4:	cb 01       	movw	r24, r22
     fd6:	97 f9       	bld	r25, 7
     fd8:	08 95       	ret

00000fda <inverse>:
     fda:	9b 01       	movw	r18, r22
     fdc:	ac 01       	movw	r20, r24
     fde:	60 e0       	ldi	r22, 0x00	; 0
     fe0:	70 e0       	ldi	r23, 0x00	; 0
     fe2:	80 e8       	ldi	r24, 0x80	; 128
     fe4:	9f e3       	ldi	r25, 0x3F	; 63
     fe6:	ad ce       	rjmp	.-678    	; 0xd42 <__divsf3>

00000fe8 <__mulsf3>:
     fe8:	0b d0       	rcall	.+22     	; 0x1000 <__mulsf3x>
     fea:	bd cf       	rjmp	.-134    	; 0xf66 <__fp_round>
     fec:	ae df       	rcall	.-164    	; 0xf4a <__fp_pscA>
     fee:	28 f0       	brcs	.+10     	; 0xffa <__mulsf3+0x12>
     ff0:	b3 df       	rcall	.-154    	; 0xf58 <__fp_pscB>
     ff2:	18 f0       	brcs	.+6      	; 0xffa <__mulsf3+0x12>
     ff4:	95 23       	and	r25, r21
     ff6:	09 f0       	breq	.+2      	; 0xffa <__mulsf3+0x12>
     ff8:	7a cf       	rjmp	.-268    	; 0xeee <__fp_inf>
     ffa:	7f cf       	rjmp	.-258    	; 0xefa <__fp_nan>
     ffc:	11 24       	eor	r1, r1
     ffe:	e7 cf       	rjmp	.-50     	; 0xfce <__fp_szero>

00001000 <__mulsf3x>:
    1000:	c3 df       	rcall	.-122    	; 0xf88 <__fp_split3>
    1002:	a0 f3       	brcs	.-24     	; 0xfec <__mulsf3+0x4>

00001004 <__mulsf3_pse>:
    1004:	95 9f       	mul	r25, r21
    1006:	d1 f3       	breq	.-12     	; 0xffc <__mulsf3+0x14>
    1008:	95 0f       	add	r25, r21
    100a:	50 e0       	ldi	r21, 0x00	; 0
    100c:	55 1f       	adc	r21, r21
    100e:	62 9f       	mul	r22, r18
    1010:	f0 01       	movw	r30, r0
    1012:	72 9f       	mul	r23, r18
    1014:	bb 27       	eor	r27, r27
    1016:	f0 0d       	add	r31, r0
    1018:	b1 1d       	adc	r27, r1
    101a:	63 9f       	mul	r22, r19
    101c:	aa 27       	eor	r26, r26
    101e:	f0 0d       	add	r31, r0
    1020:	b1 1d       	adc	r27, r1
    1022:	aa 1f       	adc	r26, r26
    1024:	64 9f       	mul	r22, r20
    1026:	66 27       	eor	r22, r22
    1028:	b0 0d       	add	r27, r0
    102a:	a1 1d       	adc	r26, r1
    102c:	66 1f       	adc	r22, r22
    102e:	82 9f       	mul	r24, r18
    1030:	22 27       	eor	r18, r18
    1032:	b0 0d       	add	r27, r0
    1034:	a1 1d       	adc	r26, r1
    1036:	62 1f       	adc	r22, r18
    1038:	73 9f       	mul	r23, r19
    103a:	b0 0d       	add	r27, r0
    103c:	a1 1d       	adc	r26, r1
    103e:	62 1f       	adc	r22, r18
    1040:	83 9f       	mul	r24, r19
    1042:	a0 0d       	add	r26, r0
    1044:	61 1d       	adc	r22, r1
    1046:	22 1f       	adc	r18, r18
    1048:	74 9f       	mul	r23, r20
    104a:	33 27       	eor	r19, r19
    104c:	a0 0d       	add	r26, r0
    104e:	61 1d       	adc	r22, r1
    1050:	23 1f       	adc	r18, r19
    1052:	84 9f       	mul	r24, r20
    1054:	60 0d       	add	r22, r0
    1056:	21 1d       	adc	r18, r1
    1058:	82 2f       	mov	r24, r18
    105a:	76 2f       	mov	r23, r22
    105c:	6a 2f       	mov	r22, r26
    105e:	11 24       	eor	r1, r1
    1060:	9f 57       	subi	r25, 0x7F	; 127
    1062:	50 40       	sbci	r21, 0x00	; 0
    1064:	8a f0       	brmi	.+34     	; 0x1088 <__mulsf3_pse+0x84>
    1066:	e1 f0       	breq	.+56     	; 0x10a0 <__mulsf3_pse+0x9c>
    1068:	88 23       	and	r24, r24
    106a:	4a f0       	brmi	.+18     	; 0x107e <__mulsf3_pse+0x7a>
    106c:	ee 0f       	add	r30, r30
    106e:	ff 1f       	adc	r31, r31
    1070:	bb 1f       	adc	r27, r27
    1072:	66 1f       	adc	r22, r22
    1074:	77 1f       	adc	r23, r23
    1076:	88 1f       	adc	r24, r24
    1078:	91 50       	subi	r25, 0x01	; 1
    107a:	50 40       	sbci	r21, 0x00	; 0
    107c:	a9 f7       	brne	.-22     	; 0x1068 <__mulsf3_pse+0x64>
    107e:	9e 3f       	cpi	r25, 0xFE	; 254
    1080:	51 05       	cpc	r21, r1
    1082:	70 f0       	brcs	.+28     	; 0x10a0 <__mulsf3_pse+0x9c>
    1084:	34 cf       	rjmp	.-408    	; 0xeee <__fp_inf>
    1086:	a3 cf       	rjmp	.-186    	; 0xfce <__fp_szero>
    1088:	5f 3f       	cpi	r21, 0xFF	; 255
    108a:	ec f3       	brlt	.-6      	; 0x1086 <__mulsf3_pse+0x82>
    108c:	98 3e       	cpi	r25, 0xE8	; 232
    108e:	dc f3       	brlt	.-10     	; 0x1086 <__mulsf3_pse+0x82>
    1090:	86 95       	lsr	r24
    1092:	77 95       	ror	r23
    1094:	67 95       	ror	r22
    1096:	b7 95       	ror	r27
    1098:	f7 95       	ror	r31
    109a:	e7 95       	ror	r30
    109c:	9f 5f       	subi	r25, 0xFF	; 255
    109e:	c1 f7       	brne	.-16     	; 0x1090 <__mulsf3_pse+0x8c>
    10a0:	fe 2b       	or	r31, r30
    10a2:	88 0f       	add	r24, r24
    10a4:	91 1d       	adc	r25, r1
    10a6:	96 95       	lsr	r25
    10a8:	87 95       	ror	r24
    10aa:	97 f9       	bld	r25, 7
    10ac:	08 95       	ret
    10ae:	11 f4       	brne	.+4      	; 0x10b4 <__mulsf3_pse+0xb0>
    10b0:	0e f4       	brtc	.+2      	; 0x10b4 <__mulsf3_pse+0xb0>
    10b2:	23 cf       	rjmp	.-442    	; 0xefa <__fp_nan>
    10b4:	41 c0       	rjmp	.+130    	; 0x1138 <__fp_mpack>

000010b6 <sqrt>:
    10b6:	70 df       	rcall	.-288    	; 0xf98 <__fp_splitA>
    10b8:	d0 f3       	brcs	.-12     	; 0x10ae <__mulsf3_pse+0xaa>
    10ba:	99 23       	and	r25, r25
    10bc:	d9 f3       	breq	.-10     	; 0x10b4 <__mulsf3_pse+0xb0>
    10be:	ce f3       	brts	.-14     	; 0x10b2 <__mulsf3_pse+0xae>
    10c0:	9f 57       	subi	r25, 0x7F	; 127
    10c2:	55 0b       	sbc	r21, r21
    10c4:	87 ff       	sbrs	r24, 7
    10c6:	46 d0       	rcall	.+140    	; 0x1154 <__fp_norm2>
    10c8:	00 24       	eor	r0, r0
    10ca:	a0 e6       	ldi	r26, 0x60	; 96
    10cc:	40 ea       	ldi	r20, 0xA0	; 160
    10ce:	90 01       	movw	r18, r0
    10d0:	80 58       	subi	r24, 0x80	; 128
    10d2:	56 95       	lsr	r21
    10d4:	97 95       	ror	r25
    10d6:	28 f4       	brcc	.+10     	; 0x10e2 <sqrt+0x2c>
    10d8:	80 5c       	subi	r24, 0xC0	; 192
    10da:	66 0f       	add	r22, r22
    10dc:	77 1f       	adc	r23, r23
    10de:	88 1f       	adc	r24, r24
    10e0:	20 f0       	brcs	.+8      	; 0x10ea <sqrt+0x34>
    10e2:	26 17       	cp	r18, r22
    10e4:	37 07       	cpc	r19, r23
    10e6:	48 07       	cpc	r20, r24
    10e8:	30 f4       	brcc	.+12     	; 0x10f6 <sqrt+0x40>
    10ea:	62 1b       	sub	r22, r18
    10ec:	73 0b       	sbc	r23, r19
    10ee:	84 0b       	sbc	r24, r20
    10f0:	20 29       	or	r18, r0
    10f2:	31 29       	or	r19, r1
    10f4:	4a 2b       	or	r20, r26
    10f6:	a6 95       	lsr	r26
    10f8:	17 94       	ror	r1
    10fa:	07 94       	ror	r0
    10fc:	20 25       	eor	r18, r0
    10fe:	31 25       	eor	r19, r1
    1100:	4a 27       	eor	r20, r26
    1102:	58 f7       	brcc	.-42     	; 0x10da <sqrt+0x24>
    1104:	66 0f       	add	r22, r22
    1106:	77 1f       	adc	r23, r23
    1108:	88 1f       	adc	r24, r24
    110a:	20 f0       	brcs	.+8      	; 0x1114 <__stack+0x15>
    110c:	26 17       	cp	r18, r22
    110e:	37 07       	cpc	r19, r23
    1110:	48 07       	cpc	r20, r24
    1112:	30 f4       	brcc	.+12     	; 0x1120 <__stack+0x21>
    1114:	62 0b       	sbc	r22, r18
    1116:	73 0b       	sbc	r23, r19
    1118:	84 0b       	sbc	r24, r20
    111a:	20 0d       	add	r18, r0
    111c:	31 1d       	adc	r19, r1
    111e:	41 1d       	adc	r20, r1
    1120:	a0 95       	com	r26
    1122:	81 f7       	brne	.-32     	; 0x1104 <__stack+0x5>
    1124:	b9 01       	movw	r22, r18
    1126:	84 2f       	mov	r24, r20
    1128:	91 58       	subi	r25, 0x81	; 129
    112a:	88 0f       	add	r24, r24
    112c:	96 95       	lsr	r25
    112e:	87 95       	ror	r24
    1130:	08 95       	ret

00001132 <square>:
    1132:	9b 01       	movw	r18, r22
    1134:	ac 01       	movw	r20, r24
    1136:	58 cf       	rjmp	.-336    	; 0xfe8 <__mulsf3>

00001138 <__fp_mpack>:
    1138:	9f 3f       	cpi	r25, 0xFF	; 255
    113a:	31 f0       	breq	.+12     	; 0x1148 <__fp_mpack_finite+0xc>

0000113c <__fp_mpack_finite>:
    113c:	91 50       	subi	r25, 0x01	; 1
    113e:	20 f4       	brcc	.+8      	; 0x1148 <__fp_mpack_finite+0xc>
    1140:	87 95       	ror	r24
    1142:	77 95       	ror	r23
    1144:	67 95       	ror	r22
    1146:	b7 95       	ror	r27
    1148:	88 0f       	add	r24, r24
    114a:	91 1d       	adc	r25, r1
    114c:	96 95       	lsr	r25
    114e:	87 95       	ror	r24
    1150:	97 f9       	bld	r25, 7
    1152:	08 95       	ret

00001154 <__fp_norm2>:
    1154:	91 50       	subi	r25, 0x01	; 1
    1156:	50 40       	sbci	r21, 0x00	; 0
    1158:	66 0f       	add	r22, r22
    115a:	77 1f       	adc	r23, r23
    115c:	88 1f       	adc	r24, r24
    115e:	d2 f7       	brpl	.-12     	; 0x1154 <__fp_norm2>
    1160:	08 95       	ret

00001162 <__divmodsi4>:
    1162:	05 2e       	mov	r0, r21
    1164:	97 fb       	bst	r25, 7
    1166:	16 f4       	brtc	.+4      	; 0x116c <__divmodsi4+0xa>
    1168:	00 94       	com	r0
    116a:	0f d0       	rcall	.+30     	; 0x118a <__negsi2>
    116c:	57 fd       	sbrc	r21, 7
    116e:	05 d0       	rcall	.+10     	; 0x117a <__divmodsi4_neg2>
    1170:	14 d0       	rcall	.+40     	; 0x119a <__udivmodsi4>
    1172:	07 fc       	sbrc	r0, 7
    1174:	02 d0       	rcall	.+4      	; 0x117a <__divmodsi4_neg2>
    1176:	46 f4       	brtc	.+16     	; 0x1188 <__divmodsi4_exit>
    1178:	08 c0       	rjmp	.+16     	; 0x118a <__negsi2>

0000117a <__divmodsi4_neg2>:
    117a:	50 95       	com	r21
    117c:	40 95       	com	r20
    117e:	30 95       	com	r19
    1180:	21 95       	neg	r18
    1182:	3f 4f       	sbci	r19, 0xFF	; 255
    1184:	4f 4f       	sbci	r20, 0xFF	; 255
    1186:	5f 4f       	sbci	r21, 0xFF	; 255

00001188 <__divmodsi4_exit>:
    1188:	08 95       	ret

0000118a <__negsi2>:
    118a:	90 95       	com	r25
    118c:	80 95       	com	r24
    118e:	70 95       	com	r23
    1190:	61 95       	neg	r22
    1192:	7f 4f       	sbci	r23, 0xFF	; 255
    1194:	8f 4f       	sbci	r24, 0xFF	; 255
    1196:	9f 4f       	sbci	r25, 0xFF	; 255
    1198:	08 95       	ret

0000119a <__udivmodsi4>:
    119a:	a1 e2       	ldi	r26, 0x21	; 33
    119c:	1a 2e       	mov	r1, r26
    119e:	aa 1b       	sub	r26, r26
    11a0:	bb 1b       	sub	r27, r27
    11a2:	fd 01       	movw	r30, r26
    11a4:	0d c0       	rjmp	.+26     	; 0x11c0 <__udivmodsi4_ep>

000011a6 <__udivmodsi4_loop>:
    11a6:	aa 1f       	adc	r26, r26
    11a8:	bb 1f       	adc	r27, r27
    11aa:	ee 1f       	adc	r30, r30
    11ac:	ff 1f       	adc	r31, r31
    11ae:	a2 17       	cp	r26, r18
    11b0:	b3 07       	cpc	r27, r19
    11b2:	e4 07       	cpc	r30, r20
    11b4:	f5 07       	cpc	r31, r21
    11b6:	20 f0       	brcs	.+8      	; 0x11c0 <__udivmodsi4_ep>
    11b8:	a2 1b       	sub	r26, r18
    11ba:	b3 0b       	sbc	r27, r19
    11bc:	e4 0b       	sbc	r30, r20
    11be:	f5 0b       	sbc	r31, r21

000011c0 <__udivmodsi4_ep>:
    11c0:	66 1f       	adc	r22, r22
    11c2:	77 1f       	adc	r23, r23
    11c4:	88 1f       	adc	r24, r24
    11c6:	99 1f       	adc	r25, r25
    11c8:	1a 94       	dec	r1
    11ca:	69 f7       	brne	.-38     	; 0x11a6 <__udivmodsi4_loop>
    11cc:	60 95       	com	r22
    11ce:	70 95       	com	r23
    11d0:	80 95       	com	r24
    11d2:	90 95       	com	r25
    11d4:	9b 01       	movw	r18, r22
    11d6:	ac 01       	movw	r20, r24
    11d8:	bd 01       	movw	r22, r26
    11da:	cf 01       	movw	r24, r30
    11dc:	08 95       	ret

000011de <_exit>:
    11de:	f8 94       	cli

000011e0 <__stop_program>:
    11e0:	ff cf       	rjmp	.-2      	; 0x11e0 <__stop_program>
